{"ast":null,"code":"var _jsxFileName = \"/Users/bytedance/Desktop/sourceCodeReading/react-code/src/Hook.js\";\nimport * as React from 'react';\nimport { useCallback, useEffect, useLayoutEffect, useRef, useState, useMemo } from 'react';\nexport default function Hook() {\n  const [count, setCount] = useState(0);\n  const [count2, setCount2] = useState(0);\n  const countRef = useRef(0);\n  useEffect(() => {\n    countRef.current++;\n    return () => {\n      console.log('useEffect destory function');\n    };\n  }, [count]);\n  const increase = useCallback(function () {\n    setCount(count + 1);\n    setCount(count + 1);\n    setCount(count + 1);\n    setCount(pre => pre + 1);\n    setCount(pre => pre + 4);\n    setCount2(pre => pre + 2);\n    setCount2(pre => pre + 3);\n  }, []);\n  const memoValue = useMemo(() => {\n    return count;\n  }, [count]);\n  useLayoutEffect(() => {\n    const dom = document.getElementById('test'); // console.log('useLayoutEffect create', dom)\n\n    return () => {\n      console.log('useLayoutEffect destoryed');\n    };\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"test\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, memoValue, \" : \", count2), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: increase,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, \"increase\"));\n}","map":{"version":3,"sources":["/Users/bytedance/Desktop/sourceCodeReading/react-code/src/Hook.js"],"names":["React","useCallback","useEffect","useLayoutEffect","useRef","useState","useMemo","Hook","count","setCount","count2","setCount2","countRef","current","console","log","increase","pre","memoValue","dom","document","getElementById"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SACEC,WADF,EAEEC,SAFF,EAGEC,eAHF,EAIEC,MAJF,EAKEC,QALF,EAMEC,OANF,QAOO,OAPP;AASA,eAAe,SAASC,IAAT,GAAgB;AAE7B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM,CAACK,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,CAAD,CAApC;AACA,QAAMO,QAAQ,GAAGR,MAAM,CAAC,CAAD,CAAvB;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,QAAQ,CAACC,OAAT;AACA,WAAO,MAAM;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACD,KAFD;AAGD,GALQ,EAKN,CAACP,KAAD,CALM,CAAT;AAOA,QAAMQ,QAAQ,GAAGf,WAAW,CAAC,YAAY;AACvCQ,IAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACAC,IAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACAC,IAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACAC,IAAAA,QAAQ,CAACQ,GAAG,IAAIA,GAAG,GAAG,CAAd,CAAR;AACAR,IAAAA,QAAQ,CAACQ,GAAG,IAAIA,GAAG,GAAG,CAAd,CAAR;AACAN,IAAAA,SAAS,CAACM,GAAG,IAAIA,GAAG,GAAG,CAAd,CAAT;AACAN,IAAAA,SAAS,CAACM,GAAG,IAAIA,GAAG,GAAG,CAAd,CAAT;AACD,GAR2B,EAQzB,EARyB,CAA5B;AAUA,QAAMC,SAAS,GAAGZ,OAAO,CAAC,MAAM;AAC9B,WAAOE,KAAP;AACD,GAFwB,EAEtB,CAACA,KAAD,CAFsB,CAAzB;AAIAL,EAAAA,eAAe,CAAC,MAAM;AACpB,UAAMgB,GAAG,GAAGC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAZ,CADoB,CAEpB;;AACA,WAAO,MAAM;AACXP,MAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACD,KAFD;AAGD,GANc,CAAf;AAQA,sBACE;AAAK,IAAA,EAAE,EAAC,MAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOG,SAAP,SAAqBR,MAArB,CADF,eAEE;AAAQ,IAAA,OAAO,EAAEM,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,CADF;AAMD","sourcesContent":["import * as React from 'react'\nimport {\n  useCallback,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n  useState,\n  useMemo\n} from 'react'\n\nexport default function Hook() {\n\n  const [count, setCount] = useState(0)\n  const [count2, setCount2] = useState(0)\n  const countRef = useRef(0);\n\n  useEffect(() => {\n    countRef.current ++;\n    return () => {\n      console.log('useEffect destory function')\n    }\n  }, [count])\n\n  const increase = useCallback(function () {\n    setCount(count + 1);\n    setCount(count + 1);\n    setCount(count + 1);\n    setCount(pre => pre + 1)\n    setCount(pre => pre + 4);\n    setCount2(pre => pre + 2);\n    setCount2(pre => pre + 3);\n  }, [])\n\n  const memoValue = useMemo(() => {\n    return count;\n  }, [count])\n\n  useLayoutEffect(() => {\n    const dom = document.getElementById('test')\n    // console.log('useLayoutEffect create', dom)\n    return () => {\n      console.log('useLayoutEffect destoryed')\n    }\n  })\n\n  return (\n    <div id=\"test\">\n      <span>{memoValue} : {count2}</span>\n      <button onClick={increase}>increase</button>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}