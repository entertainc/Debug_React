{"ast":null,"code":"/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport { registrationNameDependencies, possibleRegistrationNames } from '../events/EventRegistry';\nimport { canUseDOM } from 'shared/ExecutionEnvironment';\nimport hasOwnProperty from 'shared/hasOwnProperty';\nimport { checkHtmlStringCoercion } from 'shared/CheckStringCoercion';\nimport { getValueForAttribute, getValueForProperty, setValueForProperty } from './DOMPropertyOperations';\nimport { initWrapperState as ReactDOMInputInitWrapperState, getHostProps as ReactDOMInputGetHostProps, postMountWrapper as ReactDOMInputPostMountWrapper, updateChecked as ReactDOMInputUpdateChecked, updateWrapper as ReactDOMInputUpdateWrapper, restoreControlledState as ReactDOMInputRestoreControlledState } from './ReactDOMInput';\nimport { postMountWrapper as ReactDOMOptionPostMountWrapper, validateProps as ReactDOMOptionValidateProps } from './ReactDOMOption';\nimport { initWrapperState as ReactDOMSelectInitWrapperState, getHostProps as ReactDOMSelectGetHostProps, postMountWrapper as ReactDOMSelectPostMountWrapper, restoreControlledState as ReactDOMSelectRestoreControlledState, postUpdateWrapper as ReactDOMSelectPostUpdateWrapper } from './ReactDOMSelect';\nimport { initWrapperState as ReactDOMTextareaInitWrapperState, getHostProps as ReactDOMTextareaGetHostProps, postMountWrapper as ReactDOMTextareaPostMountWrapper, updateWrapper as ReactDOMTextareaUpdateWrapper, restoreControlledState as ReactDOMTextareaRestoreControlledState } from './ReactDOMTextarea';\nimport { track } from './inputValueTracking';\nimport setInnerHTML from './setInnerHTML';\nimport setTextContent from './setTextContent';\nimport { createDangerousStringForStyles, setValueForStyles, validateShorthandPropertyCollisionInDev } from './CSSPropertyOperations';\nimport { HTML_NAMESPACE, getIntrinsicNamespace } from '../shared/DOMNamespaces';\nimport { getPropertyInfo, shouldIgnoreAttribute, shouldRemoveAttribute } from '../shared/DOMProperty';\nimport assertValidProps from '../shared/assertValidProps';\nimport { DOCUMENT_NODE } from '../shared/HTMLNodeType';\nimport isCustomComponent from '../shared/isCustomComponent';\nimport possibleStandardNames from '../shared/possibleStandardNames';\nimport { validateProperties as validateARIAProperties } from '../shared/ReactDOMInvalidARIAHook';\nimport { validateProperties as validateInputProperties } from '../shared/ReactDOMNullInputValuePropHook';\nimport { validateProperties as validateUnknownProperties } from '../shared/ReactDOMUnknownPropertyHook';\nimport { enableTrustedTypesIntegration, enableCustomElementPropertySupport, enableClientRenderFallbackOnTextMismatch, enableHostSingletons } from 'shared/ReactFeatureFlags';\nimport { mediaEventTypes, listenToNonDelegatedEvent } from '../events/DOMPluginEventSystem';\nlet didWarnInvalidHydration = false;\nlet didWarnScriptTags = false;\nconst DANGEROUSLY_SET_INNER_HTML = 'dangerouslySetInnerHTML';\nconst SUPPRESS_CONTENT_EDITABLE_WARNING = 'suppressContentEditableWarning';\nconst SUPPRESS_HYDRATION_WARNING = 'suppressHydrationWarning';\nconst AUTOFOCUS = 'autoFocus';\nconst CHILDREN = 'children';\nconst STYLE = 'style';\nconst HTML = '__html';\nlet warnedUnknownTags;\nlet validatePropertiesInDevelopment;\nlet warnForPropDifference;\nlet warnForExtraAttributes;\nlet warnForInvalidEventListener;\nlet canDiffStyleForHydrationWarning;\nlet normalizeHTML;\n\nif (__DEV__) {\n  warnedUnknownTags = {\n    // There are working polyfills for <dialog>. Let people use it.\n    dialog: true,\n    // Electron ships a custom <webview> tag to display external web content in\n    // an isolated frame and process.\n    // This tag is not present in non Electron environments such as JSDom which\n    // is often used for testing purposes.\n    // @see https://electronjs.org/docs/api/webview-tag\n    webview: true\n  };\n\n  validatePropertiesInDevelopment = function (type, props) {\n    validateARIAProperties(type, props);\n    validateInputProperties(type, props);\n    validateUnknownProperties(type, props, {\n      registrationNameDependencies,\n      possibleRegistrationNames\n    });\n  }; // IE 11 parses & normalizes the style attribute as opposed to other\n  // browsers. It adds spaces and sorts the properties in some\n  // non-alphabetical order. Handling that would require sorting CSS\n  // properties in the client & server versions or applying\n  // `expectedStyle` to a temporary DOM node to read its `style` attribute\n  // normalized. Since it only affects IE, we're skipping style warnings\n  // in that browser completely in favor of doing all that work.\n  // See https://github.com/facebook/react/issues/11807\n\n\n  canDiffStyleForHydrationWarning = canUseDOM && !document.documentMode;\n\n  warnForPropDifference = function (propName, serverValue, clientValue) {\n    if (didWarnInvalidHydration) {\n      return;\n    }\n\n    const normalizedClientValue = normalizeMarkupForTextOrAttribute(clientValue);\n    const normalizedServerValue = normalizeMarkupForTextOrAttribute(serverValue);\n\n    if (normalizedServerValue === normalizedClientValue) {\n      return;\n    }\n\n    didWarnInvalidHydration = true;\n    console.error('Prop `%s` did not match. Server: %s Client: %s', propName, JSON.stringify(normalizedServerValue), JSON.stringify(normalizedClientValue));\n  };\n\n  warnForExtraAttributes = function (attributeNames) {\n    if (didWarnInvalidHydration) {\n      return;\n    }\n\n    didWarnInvalidHydration = true;\n    const names = [];\n    attributeNames.forEach(function (name) {\n      names.push(name);\n    });\n    console.error('Extra attributes from the server: %s', names);\n  };\n\n  warnForInvalidEventListener = function (registrationName, listener) {\n    if (listener === false) {\n      console.error('Expected `%s` listener to be a function, instead got `false`.\\n\\n' + 'If you used to conditionally omit it with %s={condition && value}, ' + 'pass %s={condition ? value : undefined} instead.', registrationName, registrationName, registrationName);\n    } else {\n      console.error('Expected `%s` listener to be a function, instead got a value of `%s` type.', registrationName, typeof listener);\n    }\n  }; // Parse the HTML and read it back to normalize the HTML string so that it\n  // can be used for comparison.\n\n\n  normalizeHTML = function (parent, html) {\n    // We could have created a separate document here to avoid\n    // re-initializing custom elements if they exist. But this breaks\n    // how <noscript> is being handled. So we use the same document.\n    // See the discussion in https://github.com/facebook/react/pull/11157.\n    const testElement = parent.namespaceURI === HTML_NAMESPACE ? parent.ownerDocument.createElement(parent.tagName) : parent.ownerDocument.createElementNS(parent.namespaceURI, parent.tagName);\n    testElement.innerHTML = html;\n    return testElement.innerHTML;\n  };\n} // HTML parsing normalizes CR and CRLF to LF.\n// It also can turn \\u0000 into \\uFFFD inside attributes.\n// https://www.w3.org/TR/html5/single-page.html#preprocessing-the-input-stream\n// If we have a mismatch, it might be caused by that.\n// We will still patch up in this case but not fire the warning.\n\n\nconst NORMALIZE_NEWLINES_REGEX = /\\r\\n?/g;\nconst NORMALIZE_NULL_AND_REPLACEMENT_REGEX = /\\u0000|\\uFFFD/g;\n\nfunction normalizeMarkupForTextOrAttribute(markup) {\n  if (__DEV__) {\n    checkHtmlStringCoercion(markup);\n  }\n\n  const markupString = typeof markup === 'string' ? markup : '' + markup;\n  return markupString.replace(NORMALIZE_NEWLINES_REGEX, '\\n').replace(NORMALIZE_NULL_AND_REPLACEMENT_REGEX, '');\n}\n\nexport function checkForUnmatchedText(serverText, clientText, isConcurrentMode, shouldWarnDev) {\n  const normalizedClientText = normalizeMarkupForTextOrAttribute(clientText);\n  const normalizedServerText = normalizeMarkupForTextOrAttribute(serverText);\n\n  if (normalizedServerText === normalizedClientText) {\n    return;\n  }\n\n  if (shouldWarnDev) {\n    if (__DEV__) {\n      if (!didWarnInvalidHydration) {\n        didWarnInvalidHydration = true;\n        console.error('Text content did not match. Server: \"%s\" Client: \"%s\"', normalizedServerText, normalizedClientText);\n      }\n    }\n  }\n\n  if (isConcurrentMode && enableClientRenderFallbackOnTextMismatch) {\n    // In concurrent roots, we throw when there's a text mismatch and revert to\n    // client rendering, up to the nearest Suspense boundary.\n    throw new Error('Text content does not match server-rendered HTML.');\n  }\n}\nexport function getOwnerDocumentFromRootContainer(rootContainerElement) {\n  return rootContainerElement.nodeType === DOCUMENT_NODE ? rootContainerElement : rootContainerElement.ownerDocument;\n}\n\nfunction noop() {}\n\nexport function trapClickOnNonInteractiveElement(node) {\n  // Mobile Safari does not fire properly bubble click events on\n  // non-interactive elements, which means delegated click listeners do not\n  // fire. The workaround for this bug involves attaching an empty click\n  // listener on the target node.\n  // https://www.quirksmode.org/blog/archives/2010/09/click_event_del.html\n  // Just set it using the onclick property so that we don't have to manage any\n  // bookkeeping for it. Not sure if we need to clear it when the listener is\n  // removed.\n  // TODO: Only do this for the relevant Safaris maybe?\n  node.onclick = noop;\n}\n\nfunction setInitialDOMProperties(tag, domElement, nextProps, isCustomComponentTag) {\n  for (const propKey in nextProps) {\n    if (!nextProps.hasOwnProperty(propKey)) {\n      continue;\n    }\n\n    const nextProp = nextProps[propKey];\n\n    if (propKey === STYLE) {\n      if (__DEV__) {\n        if (nextProp) {\n          // Freeze the next style object so that we can assume it won't be\n          // mutated. We have already warned for this in the past.\n          Object.freeze(nextProp);\n        }\n      } // Relies on `updateStylesByID` not mutating `styleUpdates`.\n\n\n      setValueForStyles(domElement, nextProp);\n    } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {\n      const nextHtml = nextProp ? nextProp[HTML] : undefined;\n\n      if (nextHtml != null) {\n        setInnerHTML(domElement, nextHtml);\n      }\n    } else if (propKey === CHILDREN) {\n      if (typeof nextProp === 'string') {\n        // Avoid setting initial textContent when the text is empty. In IE11 setting\n        // textContent on a <textarea> will cause the placeholder to not\n        // show within the <textarea> until it has been focused and blurred again.\n        // https://github.com/facebook/react/issues/6731#issuecomment-254874553\n        const canSetTextContent = (!enableHostSingletons || tag !== 'body') && (tag !== 'textarea' || nextProp !== '');\n\n        if (canSetTextContent) {\n          setTextContent(domElement, nextProp);\n        }\n      } else if (typeof nextProp === 'number') {\n        const canSetTextContent = !enableHostSingletons || tag !== 'body';\n\n        if (canSetTextContent) {\n          setTextContent(domElement, '' + nextProp);\n        }\n      }\n    } else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING) {// Noop\n    } else if (propKey === AUTOFOCUS) {// We polyfill it separately on the client during commit.\n      // We could have excluded it in the property list instead of\n      // adding a special case here, but then it wouldn't be emitted\n      // on server rendering (but we *do* want to emit it in SSR).\n    } else if (registrationNameDependencies.hasOwnProperty(propKey)) {\n      if (nextProp != null) {\n        if (__DEV__ && typeof nextProp !== 'function') {\n          warnForInvalidEventListener(propKey, nextProp);\n        }\n\n        if (propKey === 'onScroll') {\n          listenToNonDelegatedEvent('scroll', domElement);\n        }\n      }\n    } else if (nextProp != null) {\n      setValueForProperty(domElement, propKey, nextProp, isCustomComponentTag);\n    }\n  }\n}\n\nfunction updateDOMProperties(domElement, updatePayload, wasCustomComponentTag, isCustomComponentTag) {\n  // TODO: Handle wasCustomComponentTag\n  for (let i = 0; i < updatePayload.length; i += 2) {\n    const propKey = updatePayload[i];\n    const propValue = updatePayload[i + 1];\n\n    if (propKey === STYLE) {\n      setValueForStyles(domElement, propValue);\n    } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {\n      setInnerHTML(domElement, propValue);\n    } else if (propKey === CHILDREN) {\n      setTextContent(domElement, propValue);\n    } else {\n      setValueForProperty(domElement, propKey, propValue, isCustomComponentTag);\n    }\n  }\n}\n\nexport function createElement(type, props, rootContainerElement, parentNamespace) {\n  let isCustomComponentTag; // We create tags in the namespace of their parent container, except HTML\n  // tags get no namespace.\n\n  const ownerDocument = getOwnerDocumentFromRootContainer(rootContainerElement);\n  let domElement;\n  let namespaceURI = parentNamespace;\n\n  if (namespaceURI === HTML_NAMESPACE) {\n    namespaceURI = getIntrinsicNamespace(type);\n  }\n\n  if (namespaceURI === HTML_NAMESPACE) {\n    if (__DEV__) {\n      isCustomComponentTag = isCustomComponent(type, props); // Should this check be gated by parent namespace? Not sure we want to\n      // allow <SVG> or <mATH>.\n\n      if (!isCustomComponentTag && type !== type.toLowerCase()) {\n        console.error('<%s /> is using incorrect casing. ' + 'Use PascalCase for React components, ' + 'or lowercase for HTML elements.', type);\n      }\n    }\n\n    if (type === 'script') {\n      // Create the script via .innerHTML so its \"parser-inserted\" flag is\n      // set to true and it does not execute\n      const div = ownerDocument.createElement('div');\n\n      if (__DEV__) {\n        if (enableTrustedTypesIntegration && !didWarnScriptTags) {\n          console.error('Encountered a script tag while rendering React component. ' + 'Scripts inside React components are never executed when rendering ' + 'on the client. Consider using template tag instead ' + '(https://developer.mozilla.org/en-US/docs/Web/HTML/Element/template).');\n          didWarnScriptTags = true;\n        }\n      }\n\n      div.innerHTML = '<script><' + '/script>'; // eslint-disable-line\n      // This is guaranteed to yield a script element.\n\n      const firstChild = div.firstChild;\n      domElement = div.removeChild(firstChild);\n    } else if (typeof props.is === 'string') {\n      domElement = ownerDocument.createElement(type, {\n        is: props.is\n      });\n    } else {\n      // Separate else branch instead of using `props.is || undefined` above because of a Firefox bug.\n      // See discussion in https://github.com/facebook/react/pull/6896\n      // and discussion in https://bugzilla.mozilla.org/show_bug.cgi?id=1276240\n      domElement = ownerDocument.createElement(type); // Normally attributes are assigned in `setInitialDOMProperties`, however the `multiple` and `size`\n      // attributes on `select`s needs to be added before `option`s are inserted.\n      // This prevents:\n      // - a bug where the `select` does not scroll to the correct option because singular\n      //  `select` elements automatically pick the first item #13222\n      // - a bug where the `select` set the first item as selected despite the `size` attribute #14239\n      // See https://github.com/facebook/react/issues/13222\n      // and https://github.com/facebook/react/issues/14239\n\n      if (type === 'select') {\n        const node = domElement;\n\n        if (props.multiple) {\n          node.multiple = true;\n        } else if (props.size) {\n          // Setting a size greater than 1 causes a select to behave like `multiple=true`, where\n          // it is possible that no option is selected.\n          //\n          // This is only necessary when a select in \"single selection mode\".\n          node.size = props.size;\n        }\n      }\n    }\n  } else {\n    domElement = ownerDocument.createElementNS(namespaceURI, type);\n  }\n\n  if (__DEV__) {\n    if (namespaceURI === HTML_NAMESPACE) {\n      if (!isCustomComponentTag && // $FlowFixMe[method-unbinding]\n      Object.prototype.toString.call(domElement) === '[object HTMLUnknownElement]' && !hasOwnProperty.call(warnedUnknownTags, type)) {\n        warnedUnknownTags[type] = true;\n        console.error('The tag <%s> is unrecognized in this browser. ' + 'If you meant to render a React component, start its name with ' + 'an uppercase letter.', type);\n      }\n    }\n  }\n\n  return domElement;\n}\nexport function createTextNode(text, rootContainerElement) {\n  return getOwnerDocumentFromRootContainer(rootContainerElement).createTextNode(text);\n}\nexport function setInitialProperties(domElement, tag, rawProps) {\n  const isCustomComponentTag = isCustomComponent(tag, rawProps);\n\n  if (__DEV__) {\n    validatePropertiesInDevelopment(tag, rawProps);\n  } // TODO: Make sure that we check isMounted before firing any of these events.\n\n\n  let props;\n\n  switch (tag) {\n    case 'dialog':\n      listenToNonDelegatedEvent('cancel', domElement);\n      listenToNonDelegatedEvent('close', domElement);\n      props = rawProps;\n      break;\n\n    case 'iframe':\n    case 'object':\n    case 'embed':\n      // We listen to this event in case to ensure emulated bubble\n      // listeners still fire for the load event.\n      listenToNonDelegatedEvent('load', domElement);\n      props = rawProps;\n      break;\n\n    case 'video':\n    case 'audio':\n      // We listen to these events in case to ensure emulated bubble\n      // listeners still fire for all the media events.\n      for (let i = 0; i < mediaEventTypes.length; i++) {\n        listenToNonDelegatedEvent(mediaEventTypes[i], domElement);\n      }\n\n      props = rawProps;\n      break;\n\n    case 'source':\n      // We listen to this event in case to ensure emulated bubble\n      // listeners still fire for the error event.\n      listenToNonDelegatedEvent('error', domElement);\n      props = rawProps;\n      break;\n\n    case 'img':\n    case 'image':\n    case 'link':\n      // We listen to these events in case to ensure emulated bubble\n      // listeners still fire for error and load events.\n      listenToNonDelegatedEvent('error', domElement);\n      listenToNonDelegatedEvent('load', domElement);\n      props = rawProps;\n      break;\n\n    case 'details':\n      // We listen to this event in case to ensure emulated bubble\n      // listeners still fire for the toggle event.\n      listenToNonDelegatedEvent('toggle', domElement);\n      props = rawProps;\n      break;\n\n    case 'input':\n      ReactDOMInputInitWrapperState(domElement, rawProps);\n      props = ReactDOMInputGetHostProps(domElement, rawProps); // We listen to this event in case to ensure emulated bubble\n      // listeners still fire for the invalid event.\n\n      listenToNonDelegatedEvent('invalid', domElement);\n      break;\n\n    case 'option':\n      ReactDOMOptionValidateProps(domElement, rawProps);\n      props = rawProps;\n      break;\n\n    case 'select':\n      ReactDOMSelectInitWrapperState(domElement, rawProps);\n      props = ReactDOMSelectGetHostProps(domElement, rawProps); // We listen to this event in case to ensure emulated bubble\n      // listeners still fire for the invalid event.\n\n      listenToNonDelegatedEvent('invalid', domElement);\n      break;\n\n    case 'textarea':\n      ReactDOMTextareaInitWrapperState(domElement, rawProps);\n      props = ReactDOMTextareaGetHostProps(domElement, rawProps); // We listen to this event in case to ensure emulated bubble\n      // listeners still fire for the invalid event.\n\n      listenToNonDelegatedEvent('invalid', domElement);\n      break;\n\n    default:\n      props = rawProps;\n  }\n\n  assertValidProps(tag, props);\n  setInitialDOMProperties(tag, domElement, props, isCustomComponentTag);\n\n  switch (tag) {\n    case 'input':\n      // TODO: Make sure we check if this is still unmounted or do any clean\n      // up necessary since we never stop tracking anymore.\n      track(domElement);\n      ReactDOMInputPostMountWrapper(domElement, rawProps, false);\n      break;\n\n    case 'textarea':\n      // TODO: Make sure we check if this is still unmounted or do any clean\n      // up necessary since we never stop tracking anymore.\n      track(domElement);\n      ReactDOMTextareaPostMountWrapper(domElement, rawProps);\n      break;\n\n    case 'option':\n      ReactDOMOptionPostMountWrapper(domElement, rawProps);\n      break;\n\n    case 'select':\n      ReactDOMSelectPostMountWrapper(domElement, rawProps);\n      break;\n\n    default:\n      if (typeof props.onClick === 'function') {\n        // TODO: This cast may not be sound for SVG, MathML or custom elements.\n        trapClickOnNonInteractiveElement(domElement);\n      }\n\n      break;\n  }\n} // Calculate the diff between the two objects.\n\nexport function diffProperties(domElement, tag, lastRawProps, nextRawProps) {\n  if (__DEV__) {\n    validatePropertiesInDevelopment(tag, nextRawProps);\n  }\n\n  let updatePayload = null;\n  let lastProps;\n  let nextProps;\n\n  switch (tag) {\n    case 'input':\n      lastProps = ReactDOMInputGetHostProps(domElement, lastRawProps);\n      nextProps = ReactDOMInputGetHostProps(domElement, nextRawProps);\n      updatePayload = [];\n      break;\n\n    case 'select':\n      lastProps = ReactDOMSelectGetHostProps(domElement, lastRawProps);\n      nextProps = ReactDOMSelectGetHostProps(domElement, nextRawProps);\n      updatePayload = [];\n      break;\n\n    case 'textarea':\n      lastProps = ReactDOMTextareaGetHostProps(domElement, lastRawProps);\n      nextProps = ReactDOMTextareaGetHostProps(domElement, nextRawProps);\n      updatePayload = [];\n      break;\n\n    default:\n      lastProps = lastRawProps;\n      nextProps = nextRawProps;\n\n      if (typeof lastProps.onClick !== 'function' && typeof nextProps.onClick === 'function') {\n        // TODO: This cast may not be sound for SVG, MathML or custom elements.\n        trapClickOnNonInteractiveElement(domElement);\n      }\n\n      break;\n  }\n\n  assertValidProps(tag, nextProps);\n  let propKey;\n  let styleName;\n  let styleUpdates = null;\n\n  for (propKey in lastProps) {\n    if (nextProps.hasOwnProperty(propKey) || !lastProps.hasOwnProperty(propKey) || lastProps[propKey] == null) {\n      continue;\n    }\n\n    if (propKey === STYLE) {\n      const lastStyle = lastProps[propKey];\n\n      for (styleName in lastStyle) {\n        if (lastStyle.hasOwnProperty(styleName)) {\n          if (!styleUpdates) {\n            styleUpdates = {};\n          }\n\n          styleUpdates[styleName] = '';\n        }\n      }\n    } else if (propKey === DANGEROUSLY_SET_INNER_HTML || propKey === CHILDREN) {// Noop. This is handled by the clear text mechanism.\n    } else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING) {// Noop\n    } else if (propKey === AUTOFOCUS) {// Noop. It doesn't work on updates anyway.\n    } else if (registrationNameDependencies.hasOwnProperty(propKey)) {\n      // This is a special case. If any listener updates we need to ensure\n      // that the \"current\" fiber pointer gets updated so we need a commit\n      // to update this element.\n      if (!updatePayload) {\n        updatePayload = [];\n      }\n    } else {\n      // For all other deleted properties we add it to the queue. We use\n      // the allowed property list in the commit phase instead.\n      (updatePayload = updatePayload || []).push(propKey, null);\n    }\n  }\n\n  for (propKey in nextProps) {\n    const nextProp = nextProps[propKey];\n    const lastProp = lastProps != null ? lastProps[propKey] : undefined;\n\n    if (!nextProps.hasOwnProperty(propKey) || nextProp === lastProp || nextProp == null && lastProp == null) {\n      continue;\n    }\n\n    if (propKey === STYLE) {\n      if (__DEV__) {\n        if (nextProp) {\n          // Freeze the next style object so that we can assume it won't be\n          // mutated. We have already warned for this in the past.\n          Object.freeze(nextProp);\n        }\n      }\n\n      if (lastProp) {\n        // Unset styles on `lastProp` but not on `nextProp`.\n        for (styleName in lastProp) {\n          if (lastProp.hasOwnProperty(styleName) && (!nextProp || !nextProp.hasOwnProperty(styleName))) {\n            if (!styleUpdates) {\n              styleUpdates = {};\n            }\n\n            styleUpdates[styleName] = '';\n          }\n        } // Update styles that changed since `lastProp`.\n\n\n        for (styleName in nextProp) {\n          if (nextProp.hasOwnProperty(styleName) && lastProp[styleName] !== nextProp[styleName]) {\n            if (!styleUpdates) {\n              styleUpdates = {};\n            }\n\n            styleUpdates[styleName] = nextProp[styleName];\n          }\n        }\n      } else {\n        // Relies on `updateStylesByID` not mutating `styleUpdates`.\n        if (!styleUpdates) {\n          if (!updatePayload) {\n            updatePayload = [];\n          }\n\n          updatePayload.push(propKey, styleUpdates);\n        }\n\n        styleUpdates = nextProp;\n      }\n    } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {\n      const nextHtml = nextProp ? nextProp[HTML] : undefined;\n      const lastHtml = lastProp ? lastProp[HTML] : undefined;\n\n      if (nextHtml != null) {\n        if (lastHtml !== nextHtml) {\n          (updatePayload = updatePayload || []).push(propKey, nextHtml);\n        }\n      } else {// TODO: It might be too late to clear this if we have children\n        // inserted already.\n      }\n    } else if (propKey === CHILDREN) {\n      if (typeof nextProp === 'string' || typeof nextProp === 'number') {\n        (updatePayload = updatePayload || []).push(propKey, '' + nextProp);\n      }\n    } else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING) {// Noop\n    } else if (registrationNameDependencies.hasOwnProperty(propKey)) {\n      if (nextProp != null) {\n        // We eagerly listen to this even though we haven't committed yet.\n        if (__DEV__ && typeof nextProp !== 'function') {\n          warnForInvalidEventListener(propKey, nextProp);\n        }\n\n        if (propKey === 'onScroll') {\n          listenToNonDelegatedEvent('scroll', domElement);\n        }\n      }\n\n      if (!updatePayload && lastProp !== nextProp) {\n        // This is a special case. If any listener updates we need to ensure\n        // that the \"current\" props pointer gets updated so we need a commit\n        // to update this element.\n        updatePayload = [];\n      }\n    } else {\n      // For any other property we always add it to the queue and then we\n      // filter it out using the allowed property list during the commit.\n      (updatePayload = updatePayload || []).push(propKey, nextProp);\n    }\n  }\n\n  if (styleUpdates) {\n    if (__DEV__) {\n      validateShorthandPropertyCollisionInDev(styleUpdates, nextProps[STYLE]);\n    }\n\n    (updatePayload = updatePayload || []).push(STYLE, styleUpdates);\n  }\n\n  return updatePayload;\n} // Apply the diff.\n\nexport function updateProperties(domElement, updatePayload, tag, lastRawProps, nextRawProps) {\n  // Update checked *before* name.\n  // In the middle of an update, it is possible to have multiple checked.\n  // When a checked radio tries to change name, browser makes another radio's checked false.\n  if (tag === 'input' && nextRawProps.type === 'radio' && nextRawProps.name != null) {\n    ReactDOMInputUpdateChecked(domElement, nextRawProps);\n  }\n\n  const wasCustomComponentTag = isCustomComponent(tag, lastRawProps);\n  const isCustomComponentTag = isCustomComponent(tag, nextRawProps); // Apply the diff.\n\n  updateDOMProperties(domElement, updatePayload, wasCustomComponentTag, isCustomComponentTag); // TODO: Ensure that an update gets scheduled if any of the special props\n  // changed.\n\n  switch (tag) {\n    case 'input':\n      // Update the wrapper around inputs *after* updating props. This has to\n      // happen after `updateDOMProperties`. Otherwise HTML5 input validations\n      // raise warnings and prevent the new value from being assigned.\n      ReactDOMInputUpdateWrapper(domElement, nextRawProps);\n      break;\n\n    case 'textarea':\n      ReactDOMTextareaUpdateWrapper(domElement, nextRawProps);\n      break;\n\n    case 'select':\n      // <select> value update needs to occur after <option> children\n      // reconciliation\n      ReactDOMSelectPostUpdateWrapper(domElement, nextRawProps);\n      break;\n  }\n}\n\nfunction getPossibleStandardName(propName) {\n  if (__DEV__) {\n    const lowerCasedName = propName.toLowerCase();\n\n    if (!possibleStandardNames.hasOwnProperty(lowerCasedName)) {\n      return null;\n    }\n\n    return possibleStandardNames[lowerCasedName] || null;\n  }\n\n  return null;\n}\n\nexport function diffHydratedProperties(domElement, tag, rawProps, parentNamespace, isConcurrentMode, shouldWarnDev) {\n  let isCustomComponentTag;\n  let extraAttributeNames;\n\n  if (__DEV__) {\n    isCustomComponentTag = isCustomComponent(tag, rawProps);\n    validatePropertiesInDevelopment(tag, rawProps);\n  } // TODO: Make sure that we check isMounted before firing any of these events.\n\n\n  switch (tag) {\n    case 'dialog':\n      listenToNonDelegatedEvent('cancel', domElement);\n      listenToNonDelegatedEvent('close', domElement);\n      break;\n\n    case 'iframe':\n    case 'object':\n    case 'embed':\n      // We listen to this event in case to ensure emulated bubble\n      // listeners still fire for the load event.\n      listenToNonDelegatedEvent('load', domElement);\n      break;\n\n    case 'video':\n    case 'audio':\n      // We listen to these events in case to ensure emulated bubble\n      // listeners still fire for all the media events.\n      for (let i = 0; i < mediaEventTypes.length; i++) {\n        listenToNonDelegatedEvent(mediaEventTypes[i], domElement);\n      }\n\n      break;\n\n    case 'source':\n      // We listen to this event in case to ensure emulated bubble\n      // listeners still fire for the error event.\n      listenToNonDelegatedEvent('error', domElement);\n      break;\n\n    case 'img':\n    case 'image':\n    case 'link':\n      // We listen to these events in case to ensure emulated bubble\n      // listeners still fire for error and load events.\n      listenToNonDelegatedEvent('error', domElement);\n      listenToNonDelegatedEvent('load', domElement);\n      break;\n\n    case 'details':\n      // We listen to this event in case to ensure emulated bubble\n      // listeners still fire for the toggle event.\n      listenToNonDelegatedEvent('toggle', domElement);\n      break;\n\n    case 'input':\n      ReactDOMInputInitWrapperState(domElement, rawProps); // We listen to this event in case to ensure emulated bubble\n      // listeners still fire for the invalid event.\n\n      listenToNonDelegatedEvent('invalid', domElement);\n      break;\n\n    case 'option':\n      ReactDOMOptionValidateProps(domElement, rawProps);\n      break;\n\n    case 'select':\n      ReactDOMSelectInitWrapperState(domElement, rawProps); // We listen to this event in case to ensure emulated bubble\n      // listeners still fire for the invalid event.\n\n      listenToNonDelegatedEvent('invalid', domElement);\n      break;\n\n    case 'textarea':\n      ReactDOMTextareaInitWrapperState(domElement, rawProps); // We listen to this event in case to ensure emulated bubble\n      // listeners still fire for the invalid event.\n\n      listenToNonDelegatedEvent('invalid', domElement);\n      break;\n  }\n\n  assertValidProps(tag, rawProps);\n\n  if (__DEV__) {\n    extraAttributeNames = new Set();\n    const attributes = domElement.attributes;\n\n    for (let i = 0; i < attributes.length; i++) {\n      const name = attributes[i].name.toLowerCase();\n\n      switch (name) {\n        // Controlled attributes are not validated\n        // TODO: Only ignore them on controlled tags.\n        case 'value':\n          break;\n\n        case 'checked':\n          break;\n\n        case 'selected':\n          break;\n\n        default:\n          // Intentionally use the original name.\n          // See discussion in https://github.com/facebook/react/pull/10676.\n          extraAttributeNames.add(attributes[i].name);\n      }\n    }\n  }\n\n  let updatePayload = null;\n\n  for (const propKey in rawProps) {\n    if (!rawProps.hasOwnProperty(propKey)) {\n      continue;\n    }\n\n    const nextProp = rawProps[propKey];\n\n    if (propKey === CHILDREN) {\n      // For text content children we compare against textContent. This\n      // might match additional HTML that is hidden when we read it using\n      // textContent. E.g. \"foo\" will match \"f<span>oo</span>\" but that still\n      // satisfies our requirement. Our requirement is not to produce perfect\n      // HTML and attributes. Ideally we should preserve structure but it's\n      // ok not to if the visible content is still enough to indicate what\n      // even listeners these nodes might be wired up to.\n      // TODO: Warn if there is more than a single textNode as a child.\n      // TODO: Should we use domElement.firstChild.nodeValue to compare?\n      if (typeof nextProp === 'string') {\n        if (domElement.textContent !== nextProp) {\n          if (rawProps[SUPPRESS_HYDRATION_WARNING] !== true) {\n            checkForUnmatchedText(domElement.textContent, nextProp, isConcurrentMode, shouldWarnDev);\n          }\n\n          updatePayload = [CHILDREN, nextProp];\n        }\n      } else if (typeof nextProp === 'number') {\n        if (domElement.textContent !== '' + nextProp) {\n          if (rawProps[SUPPRESS_HYDRATION_WARNING] !== true) {\n            checkForUnmatchedText(domElement.textContent, nextProp, isConcurrentMode, shouldWarnDev);\n          }\n\n          updatePayload = [CHILDREN, '' + nextProp];\n        }\n      }\n    } else if (registrationNameDependencies.hasOwnProperty(propKey)) {\n      if (nextProp != null) {\n        if (__DEV__ && typeof nextProp !== 'function') {\n          warnForInvalidEventListener(propKey, nextProp);\n        }\n\n        if (propKey === 'onScroll') {\n          listenToNonDelegatedEvent('scroll', domElement);\n        }\n      }\n    } else if (shouldWarnDev && __DEV__ && // Convince Flow we've calculated it (it's DEV-only in this method.)\n    typeof isCustomComponentTag === 'boolean') {\n      // Validate that the properties correspond to their expected values.\n      let serverValue;\n      const propertyInfo = isCustomComponentTag && enableCustomElementPropertySupport ? null : getPropertyInfo(propKey);\n\n      if (rawProps[SUPPRESS_HYDRATION_WARNING] === true) {// Don't bother comparing. We're ignoring all these warnings.\n      } else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING || // Controlled attributes are not validated\n      // TODO: Only ignore them on controlled tags.\n      propKey === 'value' || propKey === 'checked' || propKey === 'selected') {// Noop\n      } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {\n        const serverHTML = domElement.innerHTML;\n        const nextHtml = nextProp ? nextProp[HTML] : undefined;\n\n        if (nextHtml != null) {\n          const expectedHTML = normalizeHTML(domElement, nextHtml);\n\n          if (expectedHTML !== serverHTML) {\n            warnForPropDifference(propKey, serverHTML, expectedHTML);\n          }\n        }\n      } else if (propKey === STYLE) {\n        // $FlowFixMe - Should be inferred as not undefined.\n        extraAttributeNames.delete(propKey);\n\n        if (canDiffStyleForHydrationWarning) {\n          const expectedStyle = createDangerousStringForStyles(nextProp);\n          serverValue = domElement.getAttribute('style');\n\n          if (expectedStyle !== serverValue) {\n            warnForPropDifference(propKey, serverValue, expectedStyle);\n          }\n        }\n      } else if (enableCustomElementPropertySupport && isCustomComponentTag && (propKey === 'offsetParent' || propKey === 'offsetTop' || propKey === 'offsetLeft' || propKey === 'offsetWidth' || propKey === 'offsetHeight' || propKey === 'isContentEditable' || propKey === 'outerText' || propKey === 'outerHTML')) {\n        // $FlowFixMe - Should be inferred as not undefined.\n        extraAttributeNames.delete(propKey.toLowerCase());\n\n        if (__DEV__) {\n          console.error('Assignment to read-only property will result in a no-op: `%s`', propKey);\n        }\n      } else if (isCustomComponentTag && !enableCustomElementPropertySupport) {\n        // $FlowFixMe - Should be inferred as not undefined.\n        extraAttributeNames.delete(propKey.toLowerCase());\n        serverValue = getValueForAttribute(domElement, propKey, nextProp, isCustomComponentTag);\n\n        if (nextProp !== serverValue) {\n          warnForPropDifference(propKey, serverValue, nextProp);\n        }\n      } else if (!shouldIgnoreAttribute(propKey, propertyInfo, isCustomComponentTag) && !shouldRemoveAttribute(propKey, nextProp, propertyInfo, isCustomComponentTag)) {\n        let isMismatchDueToBadCasing = false;\n\n        if (propertyInfo !== null) {\n          // $FlowFixMe - Should be inferred as not undefined.\n          extraAttributeNames.delete(propertyInfo.attributeName);\n          serverValue = getValueForProperty(domElement, propKey, nextProp, propertyInfo);\n        } else {\n          let ownNamespace = parentNamespace;\n\n          if (ownNamespace === HTML_NAMESPACE) {\n            ownNamespace = getIntrinsicNamespace(tag);\n          }\n\n          if (ownNamespace === HTML_NAMESPACE) {\n            // $FlowFixMe - Should be inferred as not undefined.\n            extraAttributeNames.delete(propKey.toLowerCase());\n          } else {\n            const standardName = getPossibleStandardName(propKey);\n\n            if (standardName !== null && standardName !== propKey) {\n              // If an SVG prop is supplied with bad casing, it will\n              // be successfully parsed from HTML, but will produce a mismatch\n              // (and would be incorrectly rendered on the client).\n              // However, we already warn about bad casing elsewhere.\n              // So we'll skip the misleading extra mismatch warning in this case.\n              isMismatchDueToBadCasing = true; // $FlowFixMe - Should be inferred as not undefined.\n\n              extraAttributeNames.delete(standardName);\n            } // $FlowFixMe - Should be inferred as not undefined.\n\n\n            extraAttributeNames.delete(propKey);\n          }\n\n          serverValue = getValueForAttribute(domElement, propKey, nextProp, isCustomComponentTag);\n        }\n\n        const dontWarnCustomElement = enableCustomElementPropertySupport && isCustomComponentTag && (typeof nextProp === 'function' || typeof nextProp === 'object');\n\n        if (!dontWarnCustomElement && nextProp !== serverValue && !isMismatchDueToBadCasing) {\n          warnForPropDifference(propKey, serverValue, nextProp);\n        }\n      }\n    }\n  }\n\n  if (__DEV__) {\n    if (shouldWarnDev) {\n      if ( // $FlowFixMe - Should be inferred as not undefined.\n      extraAttributeNames.size > 0 && rawProps[SUPPRESS_HYDRATION_WARNING] !== true) {\n        // $FlowFixMe - Should be inferred as not undefined.\n        warnForExtraAttributes(extraAttributeNames);\n      }\n    }\n  }\n\n  switch (tag) {\n    case 'input':\n      // TODO: Make sure we check if this is still unmounted or do any clean\n      // up necessary since we never stop tracking anymore.\n      track(domElement);\n      ReactDOMInputPostMountWrapper(domElement, rawProps, true);\n      break;\n\n    case 'textarea':\n      // TODO: Make sure we check if this is still unmounted or do any clean\n      // up necessary since we never stop tracking anymore.\n      track(domElement);\n      ReactDOMTextareaPostMountWrapper(domElement, rawProps);\n      break;\n\n    case 'select':\n    case 'option':\n      // For input and textarea we current always set the value property at\n      // post mount to force it to diverge from attributes. However, for\n      // option and select we don't quite do the same thing and select\n      // is not resilient to the DOM state changing so we don't do that here.\n      // TODO: Consider not doing this for input and textarea.\n      break;\n\n    default:\n      if (typeof rawProps.onClick === 'function') {\n        // TODO: This cast may not be sound for SVG, MathML or custom elements.\n        trapClickOnNonInteractiveElement(domElement);\n      }\n\n      break;\n  }\n\n  return updatePayload;\n}\nexport function diffHydratedText(textNode, text, isConcurrentMode) {\n  const isDifferent = textNode.nodeValue !== text;\n  return isDifferent;\n}\nexport function warnForDeletedHydratableElement(parentNode, child) {\n  if (__DEV__) {\n    if (didWarnInvalidHydration) {\n      return;\n    }\n\n    didWarnInvalidHydration = true;\n    console.error('Did not expect server HTML to contain a <%s> in <%s>.', child.nodeName.toLowerCase(), parentNode.nodeName.toLowerCase());\n  }\n}\nexport function warnForDeletedHydratableText(parentNode, child) {\n  if (__DEV__) {\n    if (didWarnInvalidHydration) {\n      return;\n    }\n\n    didWarnInvalidHydration = true;\n    console.error('Did not expect server HTML to contain the text node \"%s\" in <%s>.', child.nodeValue, parentNode.nodeName.toLowerCase());\n  }\n}\nexport function warnForInsertedHydratedElement(parentNode, tag, props) {\n  if (__DEV__) {\n    if (didWarnInvalidHydration) {\n      return;\n    }\n\n    didWarnInvalidHydration = true;\n    console.error('Expected server HTML to contain a matching <%s> in <%s>.', tag, parentNode.nodeName.toLowerCase());\n  }\n}\nexport function warnForInsertedHydratedText(parentNode, text) {\n  if (__DEV__) {\n    if (text === '') {\n      // We expect to insert empty text nodes since they're not represented in\n      // the HTML.\n      // TODO: Remove this special case if we can just avoid inserting empty\n      // text nodes.\n      return;\n    }\n\n    if (didWarnInvalidHydration) {\n      return;\n    }\n\n    didWarnInvalidHydration = true;\n    console.error('Expected server HTML to contain a matching text node for \"%s\" in <%s>.', text, parentNode.nodeName.toLowerCase());\n  }\n}\nexport function restoreControlledState(domElement, tag, props) {\n  switch (tag) {\n    case 'input':\n      ReactDOMInputRestoreControlledState(domElement, props);\n      return;\n\n    case 'textarea':\n      ReactDOMTextareaRestoreControlledState(domElement, props);\n      return;\n\n    case 'select':\n      ReactDOMSelectRestoreControlledState(domElement, props);\n      return;\n  }\n}","map":{"version":3,"sources":["/Users/bytedance/Desktop/sourceCodeReading/react-code/src/react/packages/react-dom-bindings/src/client/ReactDOMComponent.js"],"names":["registrationNameDependencies","possibleRegistrationNames","canUseDOM","hasOwnProperty","checkHtmlStringCoercion","getValueForAttribute","getValueForProperty","setValueForProperty","initWrapperState","ReactDOMInputInitWrapperState","getHostProps","ReactDOMInputGetHostProps","postMountWrapper","ReactDOMInputPostMountWrapper","updateChecked","ReactDOMInputUpdateChecked","updateWrapper","ReactDOMInputUpdateWrapper","restoreControlledState","ReactDOMInputRestoreControlledState","ReactDOMOptionPostMountWrapper","validateProps","ReactDOMOptionValidateProps","ReactDOMSelectInitWrapperState","ReactDOMSelectGetHostProps","ReactDOMSelectPostMountWrapper","ReactDOMSelectRestoreControlledState","postUpdateWrapper","ReactDOMSelectPostUpdateWrapper","ReactDOMTextareaInitWrapperState","ReactDOMTextareaGetHostProps","ReactDOMTextareaPostMountWrapper","ReactDOMTextareaUpdateWrapper","ReactDOMTextareaRestoreControlledState","track","setInnerHTML","setTextContent","createDangerousStringForStyles","setValueForStyles","validateShorthandPropertyCollisionInDev","HTML_NAMESPACE","getIntrinsicNamespace","getPropertyInfo","shouldIgnoreAttribute","shouldRemoveAttribute","assertValidProps","DOCUMENT_NODE","isCustomComponent","possibleStandardNames","validateProperties","validateARIAProperties","validateInputProperties","validateUnknownProperties","enableTrustedTypesIntegration","enableCustomElementPropertySupport","enableClientRenderFallbackOnTextMismatch","enableHostSingletons","mediaEventTypes","listenToNonDelegatedEvent","didWarnInvalidHydration","didWarnScriptTags","DANGEROUSLY_SET_INNER_HTML","SUPPRESS_CONTENT_EDITABLE_WARNING","SUPPRESS_HYDRATION_WARNING","AUTOFOCUS","CHILDREN","STYLE","HTML","warnedUnknownTags","validatePropertiesInDevelopment","warnForPropDifference","warnForExtraAttributes","warnForInvalidEventListener","canDiffStyleForHydrationWarning","normalizeHTML","__DEV__","dialog","webview","type","props","document","documentMode","propName","serverValue","clientValue","normalizedClientValue","normalizeMarkupForTextOrAttribute","normalizedServerValue","console","error","JSON","stringify","attributeNames","names","forEach","name","push","registrationName","listener","parent","html","testElement","namespaceURI","ownerDocument","createElement","tagName","createElementNS","innerHTML","NORMALIZE_NEWLINES_REGEX","NORMALIZE_NULL_AND_REPLACEMENT_REGEX","markup","markupString","replace","checkForUnmatchedText","serverText","clientText","isConcurrentMode","shouldWarnDev","normalizedClientText","normalizedServerText","Error","getOwnerDocumentFromRootContainer","rootContainerElement","nodeType","noop","trapClickOnNonInteractiveElement","node","onclick","setInitialDOMProperties","tag","domElement","nextProps","isCustomComponentTag","propKey","nextProp","Object","freeze","nextHtml","undefined","canSetTextContent","updateDOMProperties","updatePayload","wasCustomComponentTag","i","length","propValue","parentNamespace","toLowerCase","div","firstChild","removeChild","is","multiple","size","prototype","toString","call","createTextNode","text","setInitialProperties","rawProps","onClick","diffProperties","lastRawProps","nextRawProps","lastProps","styleName","styleUpdates","lastStyle","lastProp","lastHtml","updateProperties","getPossibleStandardName","lowerCasedName","diffHydratedProperties","extraAttributeNames","Set","attributes","add","textContent","propertyInfo","serverHTML","expectedHTML","delete","expectedStyle","getAttribute","isMismatchDueToBadCasing","attributeName","ownNamespace","standardName","dontWarnCustomElement","diffHydratedText","textNode","isDifferent","nodeValue","warnForDeletedHydratableElement","parentNode","child","nodeName","warnForDeletedHydratableText","warnForInsertedHydratedElement","warnForInsertedHydratedText"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport {\n  registrationNameDependencies,\n  possibleRegistrationNames,\n} from '../events/EventRegistry';\n\nimport {canUseDOM} from 'shared/ExecutionEnvironment';\nimport hasOwnProperty from 'shared/hasOwnProperty';\nimport {checkHtmlStringCoercion} from 'shared/CheckStringCoercion';\n\nimport {\n  getValueForAttribute,\n  getValueForProperty,\n  setValueForProperty,\n} from './DOMPropertyOperations';\nimport {\n  initWrapperState as ReactDOMInputInitWrapperState,\n  getHostProps as ReactDOMInputGetHostProps,\n  postMountWrapper as ReactDOMInputPostMountWrapper,\n  updateChecked as ReactDOMInputUpdateChecked,\n  updateWrapper as ReactDOMInputUpdateWrapper,\n  restoreControlledState as ReactDOMInputRestoreControlledState,\n} from './ReactDOMInput';\nimport {\n  postMountWrapper as ReactDOMOptionPostMountWrapper,\n  validateProps as ReactDOMOptionValidateProps,\n} from './ReactDOMOption';\nimport {\n  initWrapperState as ReactDOMSelectInitWrapperState,\n  getHostProps as ReactDOMSelectGetHostProps,\n  postMountWrapper as ReactDOMSelectPostMountWrapper,\n  restoreControlledState as ReactDOMSelectRestoreControlledState,\n  postUpdateWrapper as ReactDOMSelectPostUpdateWrapper,\n} from './ReactDOMSelect';\nimport {\n  initWrapperState as ReactDOMTextareaInitWrapperState,\n  getHostProps as ReactDOMTextareaGetHostProps,\n  postMountWrapper as ReactDOMTextareaPostMountWrapper,\n  updateWrapper as ReactDOMTextareaUpdateWrapper,\n  restoreControlledState as ReactDOMTextareaRestoreControlledState,\n} from './ReactDOMTextarea';\nimport {track} from './inputValueTracking';\nimport setInnerHTML from './setInnerHTML';\nimport setTextContent from './setTextContent';\nimport {\n  createDangerousStringForStyles,\n  setValueForStyles,\n  validateShorthandPropertyCollisionInDev,\n} from './CSSPropertyOperations';\nimport {HTML_NAMESPACE, getIntrinsicNamespace} from '../shared/DOMNamespaces';\nimport {\n  getPropertyInfo,\n  shouldIgnoreAttribute,\n  shouldRemoveAttribute,\n} from '../shared/DOMProperty';\nimport assertValidProps from '../shared/assertValidProps';\nimport {DOCUMENT_NODE} from '../shared/HTMLNodeType';\nimport isCustomComponent from '../shared/isCustomComponent';\nimport possibleStandardNames from '../shared/possibleStandardNames';\nimport {validateProperties as validateARIAProperties} from '../shared/ReactDOMInvalidARIAHook';\nimport {validateProperties as validateInputProperties} from '../shared/ReactDOMNullInputValuePropHook';\nimport {validateProperties as validateUnknownProperties} from '../shared/ReactDOMUnknownPropertyHook';\n\nimport {\n  enableTrustedTypesIntegration,\n  enableCustomElementPropertySupport,\n  enableClientRenderFallbackOnTextMismatch,\n  enableHostSingletons,\n} from 'shared/ReactFeatureFlags';\nimport {\n  mediaEventTypes,\n  listenToNonDelegatedEvent,\n} from '../events/DOMPluginEventSystem';\n\nlet didWarnInvalidHydration = false;\nlet didWarnScriptTags = false;\n\nconst DANGEROUSLY_SET_INNER_HTML = 'dangerouslySetInnerHTML';\nconst SUPPRESS_CONTENT_EDITABLE_WARNING = 'suppressContentEditableWarning';\nconst SUPPRESS_HYDRATION_WARNING = 'suppressHydrationWarning';\nconst AUTOFOCUS = 'autoFocus';\nconst CHILDREN = 'children';\nconst STYLE = 'style';\nconst HTML = '__html';\n\nlet warnedUnknownTags: {\n  [key: string]: boolean,\n};\n\nlet validatePropertiesInDevelopment;\nlet warnForPropDifference;\nlet warnForExtraAttributes;\nlet warnForInvalidEventListener;\nlet canDiffStyleForHydrationWarning;\n\nlet normalizeHTML;\n\nif (__DEV__) {\n  warnedUnknownTags = {\n    // There are working polyfills for <dialog>. Let people use it.\n    dialog: true,\n    // Electron ships a custom <webview> tag to display external web content in\n    // an isolated frame and process.\n    // This tag is not present in non Electron environments such as JSDom which\n    // is often used for testing purposes.\n    // @see https://electronjs.org/docs/api/webview-tag\n    webview: true,\n  };\n\n  validatePropertiesInDevelopment = function(type, props) {\n    validateARIAProperties(type, props);\n    validateInputProperties(type, props);\n    validateUnknownProperties(type, props, {\n      registrationNameDependencies,\n      possibleRegistrationNames,\n    });\n  };\n\n  // IE 11 parses & normalizes the style attribute as opposed to other\n  // browsers. It adds spaces and sorts the properties in some\n  // non-alphabetical order. Handling that would require sorting CSS\n  // properties in the client & server versions or applying\n  // `expectedStyle` to a temporary DOM node to read its `style` attribute\n  // normalized. Since it only affects IE, we're skipping style warnings\n  // in that browser completely in favor of doing all that work.\n  // See https://github.com/facebook/react/issues/11807\n  canDiffStyleForHydrationWarning = canUseDOM && !document.documentMode;\n\n  warnForPropDifference = function(\n    propName: string,\n    serverValue: mixed,\n    clientValue: mixed,\n  ) {\n    if (didWarnInvalidHydration) {\n      return;\n    }\n    const normalizedClientValue = normalizeMarkupForTextOrAttribute(\n      clientValue,\n    );\n    const normalizedServerValue = normalizeMarkupForTextOrAttribute(\n      serverValue,\n    );\n    if (normalizedServerValue === normalizedClientValue) {\n      return;\n    }\n    didWarnInvalidHydration = true;\n    console.error(\n      'Prop `%s` did not match. Server: %s Client: %s',\n      propName,\n      JSON.stringify(normalizedServerValue),\n      JSON.stringify(normalizedClientValue),\n    );\n  };\n\n  warnForExtraAttributes = function(attributeNames: Set<string>) {\n    if (didWarnInvalidHydration) {\n      return;\n    }\n    didWarnInvalidHydration = true;\n    const names = [];\n    attributeNames.forEach(function(name) {\n      names.push(name);\n    });\n    console.error('Extra attributes from the server: %s', names);\n  };\n\n  warnForInvalidEventListener = function(registrationName, listener) {\n    if (listener === false) {\n      console.error(\n        'Expected `%s` listener to be a function, instead got `false`.\\n\\n' +\n          'If you used to conditionally omit it with %s={condition && value}, ' +\n          'pass %s={condition ? value : undefined} instead.',\n        registrationName,\n        registrationName,\n        registrationName,\n      );\n    } else {\n      console.error(\n        'Expected `%s` listener to be a function, instead got a value of `%s` type.',\n        registrationName,\n        typeof listener,\n      );\n    }\n  };\n\n  // Parse the HTML and read it back to normalize the HTML string so that it\n  // can be used for comparison.\n  normalizeHTML = function(parent: Element, html: string) {\n    // We could have created a separate document here to avoid\n    // re-initializing custom elements if they exist. But this breaks\n    // how <noscript> is being handled. So we use the same document.\n    // See the discussion in https://github.com/facebook/react/pull/11157.\n    const testElement =\n      parent.namespaceURI === HTML_NAMESPACE\n        ? parent.ownerDocument.createElement(parent.tagName)\n        : parent.ownerDocument.createElementNS(\n            (parent.namespaceURI: any),\n            parent.tagName,\n          );\n    testElement.innerHTML = html;\n    return testElement.innerHTML;\n  };\n}\n\n// HTML parsing normalizes CR and CRLF to LF.\n// It also can turn \\u0000 into \\uFFFD inside attributes.\n// https://www.w3.org/TR/html5/single-page.html#preprocessing-the-input-stream\n// If we have a mismatch, it might be caused by that.\n// We will still patch up in this case but not fire the warning.\nconst NORMALIZE_NEWLINES_REGEX = /\\r\\n?/g;\nconst NORMALIZE_NULL_AND_REPLACEMENT_REGEX = /\\u0000|\\uFFFD/g;\n\nfunction normalizeMarkupForTextOrAttribute(markup: mixed): string {\n  if (__DEV__) {\n    checkHtmlStringCoercion(markup);\n  }\n  const markupString = typeof markup === 'string' ? markup : '' + (markup: any);\n  return markupString\n    .replace(NORMALIZE_NEWLINES_REGEX, '\\n')\n    .replace(NORMALIZE_NULL_AND_REPLACEMENT_REGEX, '');\n}\n\nexport function checkForUnmatchedText(\n  serverText: string,\n  clientText: string | number,\n  isConcurrentMode: boolean,\n  shouldWarnDev: boolean,\n) {\n  const normalizedClientText = normalizeMarkupForTextOrAttribute(clientText);\n  const normalizedServerText = normalizeMarkupForTextOrAttribute(serverText);\n  if (normalizedServerText === normalizedClientText) {\n    return;\n  }\n\n  if (shouldWarnDev) {\n    if (__DEV__) {\n      if (!didWarnInvalidHydration) {\n        didWarnInvalidHydration = true;\n        console.error(\n          'Text content did not match. Server: \"%s\" Client: \"%s\"',\n          normalizedServerText,\n          normalizedClientText,\n        );\n      }\n    }\n  }\n\n  if (isConcurrentMode && enableClientRenderFallbackOnTextMismatch) {\n    // In concurrent roots, we throw when there's a text mismatch and revert to\n    // client rendering, up to the nearest Suspense boundary.\n    throw new Error('Text content does not match server-rendered HTML.');\n  }\n}\n\nexport function getOwnerDocumentFromRootContainer(\n  rootContainerElement: Element | Document | DocumentFragment,\n): Document {\n  return rootContainerElement.nodeType === DOCUMENT_NODE\n    ? (rootContainerElement: any)\n    : rootContainerElement.ownerDocument;\n}\n\nfunction noop() {}\n\nexport function trapClickOnNonInteractiveElement(node: HTMLElement) {\n  // Mobile Safari does not fire properly bubble click events on\n  // non-interactive elements, which means delegated click listeners do not\n  // fire. The workaround for this bug involves attaching an empty click\n  // listener on the target node.\n  // https://www.quirksmode.org/blog/archives/2010/09/click_event_del.html\n  // Just set it using the onclick property so that we don't have to manage any\n  // bookkeeping for it. Not sure if we need to clear it when the listener is\n  // removed.\n  // TODO: Only do this for the relevant Safaris maybe?\n  node.onclick = noop;\n}\n\nfunction setInitialDOMProperties(\n  tag: string,\n  domElement: Element,\n  nextProps: Object,\n  isCustomComponentTag: boolean,\n): void {\n  for (const propKey in nextProps) {\n    if (!nextProps.hasOwnProperty(propKey)) {\n      continue;\n    }\n    const nextProp = nextProps[propKey];\n    if (propKey === STYLE) {\n      if (__DEV__) {\n        if (nextProp) {\n          // Freeze the next style object so that we can assume it won't be\n          // mutated. We have already warned for this in the past.\n          Object.freeze(nextProp);\n        }\n      }\n      // Relies on `updateStylesByID` not mutating `styleUpdates`.\n      setValueForStyles(domElement, nextProp);\n    } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {\n      const nextHtml = nextProp ? nextProp[HTML] : undefined;\n      if (nextHtml != null) {\n        setInnerHTML(domElement, nextHtml);\n      }\n    } else if (propKey === CHILDREN) {\n      if (typeof nextProp === 'string') {\n        // Avoid setting initial textContent when the text is empty. In IE11 setting\n        // textContent on a <textarea> will cause the placeholder to not\n        // show within the <textarea> until it has been focused and blurred again.\n        // https://github.com/facebook/react/issues/6731#issuecomment-254874553\n        const canSetTextContent =\n          (!enableHostSingletons || tag !== 'body') &&\n          (tag !== 'textarea' || nextProp !== '');\n        if (canSetTextContent) {\n          setTextContent(domElement, nextProp);\n        }\n      } else if (typeof nextProp === 'number') {\n        const canSetTextContent = !enableHostSingletons || tag !== 'body';\n        if (canSetTextContent) {\n          setTextContent(domElement, '' + nextProp);\n        }\n      }\n    } else if (\n      propKey === SUPPRESS_CONTENT_EDITABLE_WARNING ||\n      propKey === SUPPRESS_HYDRATION_WARNING\n    ) {\n      // Noop\n    } else if (propKey === AUTOFOCUS) {\n      // We polyfill it separately on the client during commit.\n      // We could have excluded it in the property list instead of\n      // adding a special case here, but then it wouldn't be emitted\n      // on server rendering (but we *do* want to emit it in SSR).\n    } else if (registrationNameDependencies.hasOwnProperty(propKey)) {\n      if (nextProp != null) {\n        if (__DEV__ && typeof nextProp !== 'function') {\n          warnForInvalidEventListener(propKey, nextProp);\n        }\n        if (propKey === 'onScroll') {\n          listenToNonDelegatedEvent('scroll', domElement);\n        }\n      }\n    } else if (nextProp != null) {\n      setValueForProperty(domElement, propKey, nextProp, isCustomComponentTag);\n    }\n  }\n}\n\nfunction updateDOMProperties(\n  domElement: Element,\n  updatePayload: Array<any>,\n  wasCustomComponentTag: boolean,\n  isCustomComponentTag: boolean,\n): void {\n  // TODO: Handle wasCustomComponentTag\n  for (let i = 0; i < updatePayload.length; i += 2) {\n    const propKey = updatePayload[i];\n    const propValue = updatePayload[i + 1];\n    if (propKey === STYLE) {\n      setValueForStyles(domElement, propValue);\n    } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {\n      setInnerHTML(domElement, propValue);\n    } else if (propKey === CHILDREN) {\n      setTextContent(domElement, propValue);\n    } else {\n      setValueForProperty(domElement, propKey, propValue, isCustomComponentTag);\n    }\n  }\n}\n\nexport function createElement(\n  type: string,\n  props: Object,\n  rootContainerElement: Element | Document | DocumentFragment,\n  parentNamespace: string,\n): Element {\n  let isCustomComponentTag;\n\n  // We create tags in the namespace of their parent container, except HTML\n  // tags get no namespace.\n  const ownerDocument: Document = getOwnerDocumentFromRootContainer(\n    rootContainerElement,\n  );\n  let domElement: Element;\n  let namespaceURI = parentNamespace;\n  if (namespaceURI === HTML_NAMESPACE) {\n    namespaceURI = getIntrinsicNamespace(type);\n  }\n  if (namespaceURI === HTML_NAMESPACE) {\n    if (__DEV__) {\n      isCustomComponentTag = isCustomComponent(type, props);\n      // Should this check be gated by parent namespace? Not sure we want to\n      // allow <SVG> or <mATH>.\n      if (!isCustomComponentTag && type !== type.toLowerCase()) {\n        console.error(\n          '<%s /> is using incorrect casing. ' +\n            'Use PascalCase for React components, ' +\n            'or lowercase for HTML elements.',\n          type,\n        );\n      }\n    }\n\n    if (type === 'script') {\n      // Create the script via .innerHTML so its \"parser-inserted\" flag is\n      // set to true and it does not execute\n      const div = ownerDocument.createElement('div');\n      if (__DEV__) {\n        if (enableTrustedTypesIntegration && !didWarnScriptTags) {\n          console.error(\n            'Encountered a script tag while rendering React component. ' +\n              'Scripts inside React components are never executed when rendering ' +\n              'on the client. Consider using template tag instead ' +\n              '(https://developer.mozilla.org/en-US/docs/Web/HTML/Element/template).',\n          );\n          didWarnScriptTags = true;\n        }\n      }\n      div.innerHTML = '<script><' + '/script>'; // eslint-disable-line\n      // This is guaranteed to yield a script element.\n      const firstChild = ((div.firstChild: any): HTMLScriptElement);\n      domElement = div.removeChild(firstChild);\n    } else if (typeof props.is === 'string') {\n      domElement = ownerDocument.createElement(type, {is: props.is});\n    } else {\n      // Separate else branch instead of using `props.is || undefined` above because of a Firefox bug.\n      // See discussion in https://github.com/facebook/react/pull/6896\n      // and discussion in https://bugzilla.mozilla.org/show_bug.cgi?id=1276240\n      domElement = ownerDocument.createElement(type);\n      // Normally attributes are assigned in `setInitialDOMProperties`, however the `multiple` and `size`\n      // attributes on `select`s needs to be added before `option`s are inserted.\n      // This prevents:\n      // - a bug where the `select` does not scroll to the correct option because singular\n      //  `select` elements automatically pick the first item #13222\n      // - a bug where the `select` set the first item as selected despite the `size` attribute #14239\n      // See https://github.com/facebook/react/issues/13222\n      // and https://github.com/facebook/react/issues/14239\n      if (type === 'select') {\n        const node = ((domElement: any): HTMLSelectElement);\n        if (props.multiple) {\n          node.multiple = true;\n        } else if (props.size) {\n          // Setting a size greater than 1 causes a select to behave like `multiple=true`, where\n          // it is possible that no option is selected.\n          //\n          // This is only necessary when a select in \"single selection mode\".\n          node.size = props.size;\n        }\n      }\n    }\n  } else {\n    domElement = ownerDocument.createElementNS(namespaceURI, type);\n  }\n\n  if (__DEV__) {\n    if (namespaceURI === HTML_NAMESPACE) {\n      if (\n        !isCustomComponentTag &&\n        // $FlowFixMe[method-unbinding]\n        Object.prototype.toString.call(domElement) ===\n          '[object HTMLUnknownElement]' &&\n        !hasOwnProperty.call(warnedUnknownTags, type)\n      ) {\n        warnedUnknownTags[type] = true;\n        console.error(\n          'The tag <%s> is unrecognized in this browser. ' +\n            'If you meant to render a React component, start its name with ' +\n            'an uppercase letter.',\n          type,\n        );\n      }\n    }\n  }\n\n  return domElement;\n}\n\nexport function createTextNode(\n  text: string,\n  rootContainerElement: Element | Document | DocumentFragment,\n): Text {\n  return getOwnerDocumentFromRootContainer(rootContainerElement).createTextNode(\n    text,\n  );\n}\n\nexport function setInitialProperties(\n  domElement: Element,\n  tag: string,\n  rawProps: Object,\n): void {\n  const isCustomComponentTag = isCustomComponent(tag, rawProps);\n  if (__DEV__) {\n    validatePropertiesInDevelopment(tag, rawProps);\n  }\n\n  // TODO: Make sure that we check isMounted before firing any of these events.\n  let props: Object;\n  switch (tag) {\n    case 'dialog':\n      listenToNonDelegatedEvent('cancel', domElement);\n      listenToNonDelegatedEvent('close', domElement);\n      props = rawProps;\n      break;\n    case 'iframe':\n    case 'object':\n    case 'embed':\n      // We listen to this event in case to ensure emulated bubble\n      // listeners still fire for the load event.\n      listenToNonDelegatedEvent('load', domElement);\n      props = rawProps;\n      break;\n    case 'video':\n    case 'audio':\n      // We listen to these events in case to ensure emulated bubble\n      // listeners still fire for all the media events.\n      for (let i = 0; i < mediaEventTypes.length; i++) {\n        listenToNonDelegatedEvent(mediaEventTypes[i], domElement);\n      }\n      props = rawProps;\n      break;\n    case 'source':\n      // We listen to this event in case to ensure emulated bubble\n      // listeners still fire for the error event.\n      listenToNonDelegatedEvent('error', domElement);\n      props = rawProps;\n      break;\n    case 'img':\n    case 'image':\n    case 'link':\n      // We listen to these events in case to ensure emulated bubble\n      // listeners still fire for error and load events.\n      listenToNonDelegatedEvent('error', domElement);\n      listenToNonDelegatedEvent('load', domElement);\n      props = rawProps;\n      break;\n    case 'details':\n      // We listen to this event in case to ensure emulated bubble\n      // listeners still fire for the toggle event.\n      listenToNonDelegatedEvent('toggle', domElement);\n      props = rawProps;\n      break;\n    case 'input':\n      ReactDOMInputInitWrapperState(domElement, rawProps);\n      props = ReactDOMInputGetHostProps(domElement, rawProps);\n      // We listen to this event in case to ensure emulated bubble\n      // listeners still fire for the invalid event.\n      listenToNonDelegatedEvent('invalid', domElement);\n      break;\n    case 'option':\n      ReactDOMOptionValidateProps(domElement, rawProps);\n      props = rawProps;\n      break;\n    case 'select':\n      ReactDOMSelectInitWrapperState(domElement, rawProps);\n      props = ReactDOMSelectGetHostProps(domElement, rawProps);\n      // We listen to this event in case to ensure emulated bubble\n      // listeners still fire for the invalid event.\n      listenToNonDelegatedEvent('invalid', domElement);\n      break;\n    case 'textarea':\n      ReactDOMTextareaInitWrapperState(domElement, rawProps);\n      props = ReactDOMTextareaGetHostProps(domElement, rawProps);\n      // We listen to this event in case to ensure emulated bubble\n      // listeners still fire for the invalid event.\n      listenToNonDelegatedEvent('invalid', domElement);\n      break;\n    default:\n      props = rawProps;\n  }\n\n  assertValidProps(tag, props);\n\n  setInitialDOMProperties(tag, domElement, props, isCustomComponentTag);\n\n  switch (tag) {\n    case 'input':\n      // TODO: Make sure we check if this is still unmounted or do any clean\n      // up necessary since we never stop tracking anymore.\n      track((domElement: any));\n      ReactDOMInputPostMountWrapper(domElement, rawProps, false);\n      break;\n    case 'textarea':\n      // TODO: Make sure we check if this is still unmounted or do any clean\n      // up necessary since we never stop tracking anymore.\n      track((domElement: any));\n      ReactDOMTextareaPostMountWrapper(domElement, rawProps);\n      break;\n    case 'option':\n      ReactDOMOptionPostMountWrapper(domElement, rawProps);\n      break;\n    case 'select':\n      ReactDOMSelectPostMountWrapper(domElement, rawProps);\n      break;\n    default:\n      if (typeof props.onClick === 'function') {\n        // TODO: This cast may not be sound for SVG, MathML or custom elements.\n        trapClickOnNonInteractiveElement(((domElement: any): HTMLElement));\n      }\n      break;\n  }\n}\n\n// Calculate the diff between the two objects.\nexport function diffProperties(\n  domElement: Element,\n  tag: string,\n  lastRawProps: Object,\n  nextRawProps: Object,\n): null | Array<mixed> {\n  if (__DEV__) {\n    validatePropertiesInDevelopment(tag, nextRawProps);\n  }\n\n  let updatePayload: null | Array<any> = null;\n\n  let lastProps: Object;\n  let nextProps: Object;\n  switch (tag) {\n    case 'input':\n      lastProps = ReactDOMInputGetHostProps(domElement, lastRawProps);\n      nextProps = ReactDOMInputGetHostProps(domElement, nextRawProps);\n      updatePayload = [];\n      break;\n    case 'select':\n      lastProps = ReactDOMSelectGetHostProps(domElement, lastRawProps);\n      nextProps = ReactDOMSelectGetHostProps(domElement, nextRawProps);\n      updatePayload = [];\n      break;\n    case 'textarea':\n      lastProps = ReactDOMTextareaGetHostProps(domElement, lastRawProps);\n      nextProps = ReactDOMTextareaGetHostProps(domElement, nextRawProps);\n      updatePayload = [];\n      break;\n    default:\n      lastProps = lastRawProps;\n      nextProps = nextRawProps;\n      if (\n        typeof lastProps.onClick !== 'function' &&\n        typeof nextProps.onClick === 'function'\n      ) {\n        // TODO: This cast may not be sound for SVG, MathML or custom elements.\n        trapClickOnNonInteractiveElement(((domElement: any): HTMLElement));\n      }\n      break;\n  }\n\n  assertValidProps(tag, nextProps);\n\n  let propKey;\n  let styleName;\n  let styleUpdates = null;\n  for (propKey in lastProps) {\n    if (\n      nextProps.hasOwnProperty(propKey) ||\n      !lastProps.hasOwnProperty(propKey) ||\n      lastProps[propKey] == null\n    ) {\n      continue;\n    }\n    if (propKey === STYLE) {\n      const lastStyle = lastProps[propKey];\n      for (styleName in lastStyle) {\n        if (lastStyle.hasOwnProperty(styleName)) {\n          if (!styleUpdates) {\n            styleUpdates = {};\n          }\n          styleUpdates[styleName] = '';\n        }\n      }\n    } else if (propKey === DANGEROUSLY_SET_INNER_HTML || propKey === CHILDREN) {\n      // Noop. This is handled by the clear text mechanism.\n    } else if (\n      propKey === SUPPRESS_CONTENT_EDITABLE_WARNING ||\n      propKey === SUPPRESS_HYDRATION_WARNING\n    ) {\n      // Noop\n    } else if (propKey === AUTOFOCUS) {\n      // Noop. It doesn't work on updates anyway.\n    } else if (registrationNameDependencies.hasOwnProperty(propKey)) {\n      // This is a special case. If any listener updates we need to ensure\n      // that the \"current\" fiber pointer gets updated so we need a commit\n      // to update this element.\n      if (!updatePayload) {\n        updatePayload = [];\n      }\n    } else {\n      // For all other deleted properties we add it to the queue. We use\n      // the allowed property list in the commit phase instead.\n      (updatePayload = updatePayload || []).push(propKey, null);\n    }\n  }\n  for (propKey in nextProps) {\n    const nextProp = nextProps[propKey];\n    const lastProp = lastProps != null ? lastProps[propKey] : undefined;\n    if (\n      !nextProps.hasOwnProperty(propKey) ||\n      nextProp === lastProp ||\n      (nextProp == null && lastProp == null)\n    ) {\n      continue;\n    }\n    if (propKey === STYLE) {\n      if (__DEV__) {\n        if (nextProp) {\n          // Freeze the next style object so that we can assume it won't be\n          // mutated. We have already warned for this in the past.\n          Object.freeze(nextProp);\n        }\n      }\n      if (lastProp) {\n        // Unset styles on `lastProp` but not on `nextProp`.\n        for (styleName in lastProp) {\n          if (\n            lastProp.hasOwnProperty(styleName) &&\n            (!nextProp || !nextProp.hasOwnProperty(styleName))\n          ) {\n            if (!styleUpdates) {\n              styleUpdates = {};\n            }\n            styleUpdates[styleName] = '';\n          }\n        }\n        // Update styles that changed since `lastProp`.\n        for (styleName in nextProp) {\n          if (\n            nextProp.hasOwnProperty(styleName) &&\n            lastProp[styleName] !== nextProp[styleName]\n          ) {\n            if (!styleUpdates) {\n              styleUpdates = {};\n            }\n            styleUpdates[styleName] = nextProp[styleName];\n          }\n        }\n      } else {\n        // Relies on `updateStylesByID` not mutating `styleUpdates`.\n        if (!styleUpdates) {\n          if (!updatePayload) {\n            updatePayload = [];\n          }\n          updatePayload.push(propKey, styleUpdates);\n        }\n        styleUpdates = nextProp;\n      }\n    } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {\n      const nextHtml = nextProp ? nextProp[HTML] : undefined;\n      const lastHtml = lastProp ? lastProp[HTML] : undefined;\n      if (nextHtml != null) {\n        if (lastHtml !== nextHtml) {\n          (updatePayload = updatePayload || []).push(propKey, nextHtml);\n        }\n      } else {\n        // TODO: It might be too late to clear this if we have children\n        // inserted already.\n      }\n    } else if (propKey === CHILDREN) {\n      if (typeof nextProp === 'string' || typeof nextProp === 'number') {\n        (updatePayload = updatePayload || []).push(propKey, '' + nextProp);\n      }\n    } else if (\n      propKey === SUPPRESS_CONTENT_EDITABLE_WARNING ||\n      propKey === SUPPRESS_HYDRATION_WARNING\n    ) {\n      // Noop\n    } else if (registrationNameDependencies.hasOwnProperty(propKey)) {\n      if (nextProp != null) {\n        // We eagerly listen to this even though we haven't committed yet.\n        if (__DEV__ && typeof nextProp !== 'function') {\n          warnForInvalidEventListener(propKey, nextProp);\n        }\n        if (propKey === 'onScroll') {\n          listenToNonDelegatedEvent('scroll', domElement);\n        }\n      }\n      if (!updatePayload && lastProp !== nextProp) {\n        // This is a special case. If any listener updates we need to ensure\n        // that the \"current\" props pointer gets updated so we need a commit\n        // to update this element.\n        updatePayload = [];\n      }\n    } else {\n      // For any other property we always add it to the queue and then we\n      // filter it out using the allowed property list during the commit.\n      (updatePayload = updatePayload || []).push(propKey, nextProp);\n    }\n  }\n  if (styleUpdates) {\n    if (__DEV__) {\n      validateShorthandPropertyCollisionInDev(styleUpdates, nextProps[STYLE]);\n    }\n    (updatePayload = updatePayload || []).push(STYLE, styleUpdates);\n  }\n  return updatePayload;\n}\n\n// Apply the diff.\nexport function updateProperties(\n  domElement: Element,\n  updatePayload: Array<any>,\n  tag: string,\n  lastRawProps: Object,\n  nextRawProps: Object,\n): void {\n  // Update checked *before* name.\n  // In the middle of an update, it is possible to have multiple checked.\n  // When a checked radio tries to change name, browser makes another radio's checked false.\n  if (\n    tag === 'input' &&\n    nextRawProps.type === 'radio' &&\n    nextRawProps.name != null\n  ) {\n    ReactDOMInputUpdateChecked(domElement, nextRawProps);\n  }\n\n  const wasCustomComponentTag = isCustomComponent(tag, lastRawProps);\n  const isCustomComponentTag = isCustomComponent(tag, nextRawProps);\n  // Apply the diff.\n  updateDOMProperties(\n    domElement,\n    updatePayload,\n    wasCustomComponentTag,\n    isCustomComponentTag,\n  );\n\n  // TODO: Ensure that an update gets scheduled if any of the special props\n  // changed.\n  switch (tag) {\n    case 'input':\n      // Update the wrapper around inputs *after* updating props. This has to\n      // happen after `updateDOMProperties`. Otherwise HTML5 input validations\n      // raise warnings and prevent the new value from being assigned.\n      ReactDOMInputUpdateWrapper(domElement, nextRawProps);\n      break;\n    case 'textarea':\n      ReactDOMTextareaUpdateWrapper(domElement, nextRawProps);\n      break;\n    case 'select':\n      // <select> value update needs to occur after <option> children\n      // reconciliation\n      ReactDOMSelectPostUpdateWrapper(domElement, nextRawProps);\n      break;\n  }\n}\n\nfunction getPossibleStandardName(propName: string): string | null {\n  if (__DEV__) {\n    const lowerCasedName = propName.toLowerCase();\n    if (!possibleStandardNames.hasOwnProperty(lowerCasedName)) {\n      return null;\n    }\n    return possibleStandardNames[lowerCasedName] || null;\n  }\n  return null;\n}\n\nexport function diffHydratedProperties(\n  domElement: Element,\n  tag: string,\n  rawProps: Object,\n  parentNamespace: string,\n  isConcurrentMode: boolean,\n  shouldWarnDev: boolean,\n): null | Array<mixed> {\n  let isCustomComponentTag;\n  let extraAttributeNames: Set<string>;\n\n  if (__DEV__) {\n    isCustomComponentTag = isCustomComponent(tag, rawProps);\n    validatePropertiesInDevelopment(tag, rawProps);\n  }\n\n  // TODO: Make sure that we check isMounted before firing any of these events.\n  switch (tag) {\n    case 'dialog':\n      listenToNonDelegatedEvent('cancel', domElement);\n      listenToNonDelegatedEvent('close', domElement);\n      break;\n    case 'iframe':\n    case 'object':\n    case 'embed':\n      // We listen to this event in case to ensure emulated bubble\n      // listeners still fire for the load event.\n      listenToNonDelegatedEvent('load', domElement);\n      break;\n    case 'video':\n    case 'audio':\n      // We listen to these events in case to ensure emulated bubble\n      // listeners still fire for all the media events.\n      for (let i = 0; i < mediaEventTypes.length; i++) {\n        listenToNonDelegatedEvent(mediaEventTypes[i], domElement);\n      }\n      break;\n    case 'source':\n      // We listen to this event in case to ensure emulated bubble\n      // listeners still fire for the error event.\n      listenToNonDelegatedEvent('error', domElement);\n      break;\n    case 'img':\n    case 'image':\n    case 'link':\n      // We listen to these events in case to ensure emulated bubble\n      // listeners still fire for error and load events.\n      listenToNonDelegatedEvent('error', domElement);\n      listenToNonDelegatedEvent('load', domElement);\n      break;\n    case 'details':\n      // We listen to this event in case to ensure emulated bubble\n      // listeners still fire for the toggle event.\n      listenToNonDelegatedEvent('toggle', domElement);\n      break;\n    case 'input':\n      ReactDOMInputInitWrapperState(domElement, rawProps);\n      // We listen to this event in case to ensure emulated bubble\n      // listeners still fire for the invalid event.\n      listenToNonDelegatedEvent('invalid', domElement);\n      break;\n    case 'option':\n      ReactDOMOptionValidateProps(domElement, rawProps);\n      break;\n    case 'select':\n      ReactDOMSelectInitWrapperState(domElement, rawProps);\n      // We listen to this event in case to ensure emulated bubble\n      // listeners still fire for the invalid event.\n      listenToNonDelegatedEvent('invalid', domElement);\n      break;\n    case 'textarea':\n      ReactDOMTextareaInitWrapperState(domElement, rawProps);\n      // We listen to this event in case to ensure emulated bubble\n      // listeners still fire for the invalid event.\n      listenToNonDelegatedEvent('invalid', domElement);\n      break;\n  }\n\n  assertValidProps(tag, rawProps);\n\n  if (__DEV__) {\n    extraAttributeNames = new Set();\n    const attributes = domElement.attributes;\n    for (let i = 0; i < attributes.length; i++) {\n      const name = attributes[i].name.toLowerCase();\n      switch (name) {\n        // Controlled attributes are not validated\n        // TODO: Only ignore them on controlled tags.\n        case 'value':\n          break;\n        case 'checked':\n          break;\n        case 'selected':\n          break;\n        default:\n          // Intentionally use the original name.\n          // See discussion in https://github.com/facebook/react/pull/10676.\n          extraAttributeNames.add(attributes[i].name);\n      }\n    }\n  }\n\n  let updatePayload = null;\n  for (const propKey in rawProps) {\n    if (!rawProps.hasOwnProperty(propKey)) {\n      continue;\n    }\n    const nextProp = rawProps[propKey];\n    if (propKey === CHILDREN) {\n      // For text content children we compare against textContent. This\n      // might match additional HTML that is hidden when we read it using\n      // textContent. E.g. \"foo\" will match \"f<span>oo</span>\" but that still\n      // satisfies our requirement. Our requirement is not to produce perfect\n      // HTML and attributes. Ideally we should preserve structure but it's\n      // ok not to if the visible content is still enough to indicate what\n      // even listeners these nodes might be wired up to.\n      // TODO: Warn if there is more than a single textNode as a child.\n      // TODO: Should we use domElement.firstChild.nodeValue to compare?\n      if (typeof nextProp === 'string') {\n        if (domElement.textContent !== nextProp) {\n          if (rawProps[SUPPRESS_HYDRATION_WARNING] !== true) {\n            checkForUnmatchedText(\n              domElement.textContent,\n              nextProp,\n              isConcurrentMode,\n              shouldWarnDev,\n            );\n          }\n          updatePayload = [CHILDREN, nextProp];\n        }\n      } else if (typeof nextProp === 'number') {\n        if (domElement.textContent !== '' + nextProp) {\n          if (rawProps[SUPPRESS_HYDRATION_WARNING] !== true) {\n            checkForUnmatchedText(\n              domElement.textContent,\n              nextProp,\n              isConcurrentMode,\n              shouldWarnDev,\n            );\n          }\n          updatePayload = [CHILDREN, '' + nextProp];\n        }\n      }\n    } else if (registrationNameDependencies.hasOwnProperty(propKey)) {\n      if (nextProp != null) {\n        if (__DEV__ && typeof nextProp !== 'function') {\n          warnForInvalidEventListener(propKey, nextProp);\n        }\n        if (propKey === 'onScroll') {\n          listenToNonDelegatedEvent('scroll', domElement);\n        }\n      }\n    } else if (\n      shouldWarnDev &&\n      __DEV__ &&\n      // Convince Flow we've calculated it (it's DEV-only in this method.)\n      typeof isCustomComponentTag === 'boolean'\n    ) {\n      // Validate that the properties correspond to their expected values.\n      let serverValue;\n      const propertyInfo =\n        isCustomComponentTag && enableCustomElementPropertySupport\n          ? null\n          : getPropertyInfo(propKey);\n      if (rawProps[SUPPRESS_HYDRATION_WARNING] === true) {\n        // Don't bother comparing. We're ignoring all these warnings.\n      } else if (\n        propKey === SUPPRESS_CONTENT_EDITABLE_WARNING ||\n        propKey === SUPPRESS_HYDRATION_WARNING ||\n        // Controlled attributes are not validated\n        // TODO: Only ignore them on controlled tags.\n        propKey === 'value' ||\n        propKey === 'checked' ||\n        propKey === 'selected'\n      ) {\n        // Noop\n      } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {\n        const serverHTML = domElement.innerHTML;\n        const nextHtml = nextProp ? nextProp[HTML] : undefined;\n        if (nextHtml != null) {\n          const expectedHTML = normalizeHTML(domElement, nextHtml);\n          if (expectedHTML !== serverHTML) {\n            warnForPropDifference(propKey, serverHTML, expectedHTML);\n          }\n        }\n      } else if (propKey === STYLE) {\n        // $FlowFixMe - Should be inferred as not undefined.\n        extraAttributeNames.delete(propKey);\n\n        if (canDiffStyleForHydrationWarning) {\n          const expectedStyle = createDangerousStringForStyles(nextProp);\n          serverValue = domElement.getAttribute('style');\n          if (expectedStyle !== serverValue) {\n            warnForPropDifference(propKey, serverValue, expectedStyle);\n          }\n        }\n      } else if (\n        enableCustomElementPropertySupport &&\n        isCustomComponentTag &&\n        (propKey === 'offsetParent' ||\n          propKey === 'offsetTop' ||\n          propKey === 'offsetLeft' ||\n          propKey === 'offsetWidth' ||\n          propKey === 'offsetHeight' ||\n          propKey === 'isContentEditable' ||\n          propKey === 'outerText' ||\n          propKey === 'outerHTML')\n      ) {\n        // $FlowFixMe - Should be inferred as not undefined.\n        extraAttributeNames.delete(propKey.toLowerCase());\n        if (__DEV__) {\n          console.error(\n            'Assignment to read-only property will result in a no-op: `%s`',\n            propKey,\n          );\n        }\n      } else if (isCustomComponentTag && !enableCustomElementPropertySupport) {\n        // $FlowFixMe - Should be inferred as not undefined.\n        extraAttributeNames.delete(propKey.toLowerCase());\n        serverValue = getValueForAttribute(\n          domElement,\n          propKey,\n          nextProp,\n          isCustomComponentTag,\n        );\n\n        if (nextProp !== serverValue) {\n          warnForPropDifference(propKey, serverValue, nextProp);\n        }\n      } else if (\n        !shouldIgnoreAttribute(propKey, propertyInfo, isCustomComponentTag) &&\n        !shouldRemoveAttribute(\n          propKey,\n          nextProp,\n          propertyInfo,\n          isCustomComponentTag,\n        )\n      ) {\n        let isMismatchDueToBadCasing = false;\n        if (propertyInfo !== null) {\n          // $FlowFixMe - Should be inferred as not undefined.\n          extraAttributeNames.delete(propertyInfo.attributeName);\n          serverValue = getValueForProperty(\n            domElement,\n            propKey,\n            nextProp,\n            propertyInfo,\n          );\n        } else {\n          let ownNamespace = parentNamespace;\n          if (ownNamespace === HTML_NAMESPACE) {\n            ownNamespace = getIntrinsicNamespace(tag);\n          }\n          if (ownNamespace === HTML_NAMESPACE) {\n            // $FlowFixMe - Should be inferred as not undefined.\n            extraAttributeNames.delete(propKey.toLowerCase());\n          } else {\n            const standardName = getPossibleStandardName(propKey);\n            if (standardName !== null && standardName !== propKey) {\n              // If an SVG prop is supplied with bad casing, it will\n              // be successfully parsed from HTML, but will produce a mismatch\n              // (and would be incorrectly rendered on the client).\n              // However, we already warn about bad casing elsewhere.\n              // So we'll skip the misleading extra mismatch warning in this case.\n              isMismatchDueToBadCasing = true;\n              // $FlowFixMe - Should be inferred as not undefined.\n              extraAttributeNames.delete(standardName);\n            }\n            // $FlowFixMe - Should be inferred as not undefined.\n            extraAttributeNames.delete(propKey);\n          }\n          serverValue = getValueForAttribute(\n            domElement,\n            propKey,\n            nextProp,\n            isCustomComponentTag,\n          );\n        }\n\n        const dontWarnCustomElement =\n          enableCustomElementPropertySupport &&\n          isCustomComponentTag &&\n          (typeof nextProp === 'function' || typeof nextProp === 'object');\n        if (\n          !dontWarnCustomElement &&\n          nextProp !== serverValue &&\n          !isMismatchDueToBadCasing\n        ) {\n          warnForPropDifference(propKey, serverValue, nextProp);\n        }\n      }\n    }\n  }\n\n  if (__DEV__) {\n    if (shouldWarnDev) {\n      if (\n        // $FlowFixMe - Should be inferred as not undefined.\n        extraAttributeNames.size > 0 &&\n        rawProps[SUPPRESS_HYDRATION_WARNING] !== true\n      ) {\n        // $FlowFixMe - Should be inferred as not undefined.\n        warnForExtraAttributes(extraAttributeNames);\n      }\n    }\n  }\n\n  switch (tag) {\n    case 'input':\n      // TODO: Make sure we check if this is still unmounted or do any clean\n      // up necessary since we never stop tracking anymore.\n      track((domElement: any));\n      ReactDOMInputPostMountWrapper(domElement, rawProps, true);\n      break;\n    case 'textarea':\n      // TODO: Make sure we check if this is still unmounted or do any clean\n      // up necessary since we never stop tracking anymore.\n      track((domElement: any));\n      ReactDOMTextareaPostMountWrapper(domElement, rawProps);\n      break;\n    case 'select':\n    case 'option':\n      // For input and textarea we current always set the value property at\n      // post mount to force it to diverge from attributes. However, for\n      // option and select we don't quite do the same thing and select\n      // is not resilient to the DOM state changing so we don't do that here.\n      // TODO: Consider not doing this for input and textarea.\n      break;\n    default:\n      if (typeof rawProps.onClick === 'function') {\n        // TODO: This cast may not be sound for SVG, MathML or custom elements.\n        trapClickOnNonInteractiveElement(((domElement: any): HTMLElement));\n      }\n      break;\n  }\n\n  return updatePayload;\n}\n\nexport function diffHydratedText(\n  textNode: Text,\n  text: string,\n  isConcurrentMode: boolean,\n): boolean {\n  const isDifferent = textNode.nodeValue !== text;\n  return isDifferent;\n}\n\nexport function warnForDeletedHydratableElement(\n  parentNode: Element | Document | DocumentFragment,\n  child: Element,\n) {\n  if (__DEV__) {\n    if (didWarnInvalidHydration) {\n      return;\n    }\n    didWarnInvalidHydration = true;\n    console.error(\n      'Did not expect server HTML to contain a <%s> in <%s>.',\n      child.nodeName.toLowerCase(),\n      parentNode.nodeName.toLowerCase(),\n    );\n  }\n}\n\nexport function warnForDeletedHydratableText(\n  parentNode: Element | Document | DocumentFragment,\n  child: Text,\n) {\n  if (__DEV__) {\n    if (didWarnInvalidHydration) {\n      return;\n    }\n    didWarnInvalidHydration = true;\n    console.error(\n      'Did not expect server HTML to contain the text node \"%s\" in <%s>.',\n      child.nodeValue,\n      parentNode.nodeName.toLowerCase(),\n    );\n  }\n}\n\nexport function warnForInsertedHydratedElement(\n  parentNode: Element | Document | DocumentFragment,\n  tag: string,\n  props: Object,\n) {\n  if (__DEV__) {\n    if (didWarnInvalidHydration) {\n      return;\n    }\n    didWarnInvalidHydration = true;\n    console.error(\n      'Expected server HTML to contain a matching <%s> in <%s>.',\n      tag,\n      parentNode.nodeName.toLowerCase(),\n    );\n  }\n}\n\nexport function warnForInsertedHydratedText(\n  parentNode: Element | Document | DocumentFragment,\n  text: string,\n) {\n  if (__DEV__) {\n    if (text === '') {\n      // We expect to insert empty text nodes since they're not represented in\n      // the HTML.\n      // TODO: Remove this special case if we can just avoid inserting empty\n      // text nodes.\n      return;\n    }\n    if (didWarnInvalidHydration) {\n      return;\n    }\n    didWarnInvalidHydration = true;\n    console.error(\n      'Expected server HTML to contain a matching text node for \"%s\" in <%s>.',\n      text,\n      parentNode.nodeName.toLowerCase(),\n    );\n  }\n}\n\nexport function restoreControlledState(\n  domElement: Element,\n  tag: string,\n  props: Object,\n): void {\n  switch (tag) {\n    case 'input':\n      ReactDOMInputRestoreControlledState(domElement, props);\n      return;\n    case 'textarea':\n      ReactDOMTextareaRestoreControlledState(domElement, props);\n      return;\n    case 'select':\n      ReactDOMSelectRestoreControlledState(domElement, props);\n      return;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}