{"ast":null,"code":"/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport ReactDOMSharedInternals from '../ReactDOMSharedInternals';\nconst {\n  Dispatcher\n} = ReactDOMSharedInternals;\nimport { ReactDOMClientDispatcher } from 'react-dom-bindings/src/client/ReactDOMFloatClient';\nimport { queueExplicitHydrationTarget } from 'react-dom-bindings/src/events/ReactDOMEventReplaying';\nimport { REACT_ELEMENT_TYPE } from 'shared/ReactSymbols';\nimport { enableFloat, enableHostSingletons, allowConcurrentByDefault, disableCommentsAsDOMContainers } from 'shared/ReactFeatureFlags';\nimport { isContainerMarkedAsRoot, markContainerAsRoot, unmarkContainerAsRoot } from 'react-dom-bindings/src/client/ReactDOMComponentTree';\nimport { listenToAllSupportedEvents } from 'react-dom-bindings/src/events/DOMPluginEventSystem';\nimport { ELEMENT_NODE, COMMENT_NODE, DOCUMENT_NODE, DOCUMENT_FRAGMENT_NODE } from 'react-dom-bindings/src/shared/HTMLNodeType';\nimport { createContainer, createHydrationContainer, updateContainer, findHostInstanceWithNoPortals, registerMutableSourceForHydration, flushSync, isAlreadyRendering } from 'react-reconciler/src/ReactFiberReconciler';\nimport { ConcurrentRoot } from 'react-reconciler/src/ReactRootTags';\n/* global reportError */\n\nconst defaultOnRecoverableError = typeof reportError === 'function' ? // In modern browsers, reportError will dispatch an error event,\n// emulating an uncaught JavaScript error.\nreportError : error => {\n  // In older browsers and test environments, fallback to console.error.\n  // eslint-disable-next-line react-internal/no-production-logging\n  console['error'](error);\n};\n\nfunction ReactDOMRoot(internalRoot) {\n  this._internalRoot = internalRoot;\n} // $FlowFixMe[prop-missing] found when upgrading Flow\n\n\nReactDOMHydrationRoot.prototype.render = ReactDOMRoot.prototype.render = function (children) {\n  const root = this._internalRoot;\n\n  if (root === null) {\n    throw new Error('Cannot update an unmounted root.');\n  }\n\n  if (__DEV__) {\n    if (typeof arguments[1] === 'function') {\n      console.error('render(...): does not support the second callback argument. ' + 'To execute a side effect after rendering, declare it in a component body with useEffect().');\n    } else if (isValidContainer(arguments[1])) {\n      console.error('You passed a container to the second argument of root.render(...). ' + \"You don't need to pass it again since you already passed it to create the root.\");\n    } else if (typeof arguments[1] !== 'undefined') {\n      console.error('You passed a second argument to root.render(...) but it only accepts ' + 'one argument.');\n    }\n\n    const container = root.containerInfo;\n\n    if (!enableFloat && !enableHostSingletons && container.nodeType !== COMMENT_NODE) {\n      const hostInstance = findHostInstanceWithNoPortals(root.current);\n\n      if (hostInstance) {\n        if (hostInstance.parentNode !== container) {\n          console.error('render(...): It looks like the React-rendered content of the ' + 'root container was removed without using React. This is not ' + 'supported and will cause errors. Instead, call ' + \"root.unmount() to empty a root's container.\");\n        }\n      }\n    }\n  }\n\n  updateContainer(children, root, null, null);\n}; // $FlowFixMe[prop-missing] found when upgrading Flow\n\n\nReactDOMHydrationRoot.prototype.unmount = ReactDOMRoot.prototype.unmount = function () {\n  if (__DEV__) {\n    if (typeof arguments[0] === 'function') {\n      console.error('unmount(...): does not support a callback argument. ' + 'To execute a side effect after rendering, declare it in a component body with useEffect().');\n    }\n  }\n\n  const root = this._internalRoot;\n\n  if (root !== null) {\n    this._internalRoot = null;\n    const container = root.containerInfo;\n\n    if (__DEV__) {\n      if (isAlreadyRendering()) {\n        console.error('Attempted to synchronously unmount a root while React was already ' + 'rendering. React cannot finish unmounting the root until the ' + 'current render has completed, which may lead to a race condition.');\n      }\n    }\n\n    flushSync(() => {\n      updateContainer(null, root, null, null);\n    });\n    unmarkContainerAsRoot(container);\n  }\n};\n\nexport function createRoot(container, options) {\n  if (!isValidContainer(container)) {\n    throw new Error('createRoot(...): Target container is not a DOM element.');\n  }\n\n  warnIfReactDOMContainerInDEV(container);\n  let isStrictMode = false;\n  let concurrentUpdatesByDefaultOverride = false;\n  let identifierPrefix = '';\n  let onRecoverableError = defaultOnRecoverableError;\n  let transitionCallbacks = null;\n\n  if (options !== null && options !== undefined) {\n    if (__DEV__) {\n      if (options.hydrate) {\n        console.warn('hydrate through createRoot is deprecated. Use ReactDOMClient.hydrateRoot(container, <App />) instead.');\n      } else {\n        if (typeof options === 'object' && options !== null && options.$$typeof === REACT_ELEMENT_TYPE) {\n          console.error('You passed a JSX element to createRoot. You probably meant to ' + 'call root.render instead. ' + 'Example usage:\\n\\n' + '  let root = createRoot(domContainer);\\n' + '  root.render(<App />);');\n        }\n      }\n    }\n\n    if (options.unstable_strictMode === true) {\n      isStrictMode = true;\n    }\n\n    if (allowConcurrentByDefault && options.unstable_concurrentUpdatesByDefault === true) {\n      concurrentUpdatesByDefaultOverride = true;\n    }\n\n    if (options.identifierPrefix !== undefined) {\n      identifierPrefix = options.identifierPrefix;\n    }\n\n    if (options.onRecoverableError !== undefined) {\n      onRecoverableError = options.onRecoverableError;\n    }\n\n    if (options.unstable_transitionCallbacks !== undefined) {\n      transitionCallbacks = options.unstable_transitionCallbacks;\n    }\n  }\n\n  const root = createContainer(container, ConcurrentRoot, null, isStrictMode, concurrentUpdatesByDefaultOverride, identifierPrefix, onRecoverableError, transitionCallbacks);\n  markContainerAsRoot(root.current, container);\n\n  if (enableFloat) {\n    // Set the default dispatcher to the client dispatcher\n    Dispatcher.current = ReactDOMClientDispatcher;\n  }\n\n  const rootContainerElement = container.nodeType === COMMENT_NODE ? container.parentNode : container;\n  listenToAllSupportedEvents(rootContainerElement); // $FlowFixMe[invalid-constructor] Flow no longer supports calling new on functions\n\n  return new ReactDOMRoot(root);\n}\n\nfunction ReactDOMHydrationRoot(internalRoot) {\n  this._internalRoot = internalRoot;\n}\n\nfunction scheduleHydration(target) {\n  if (target) {\n    queueExplicitHydrationTarget(target);\n  }\n} // $FlowFixMe[prop-missing] found when upgrading Flow\n\n\nReactDOMHydrationRoot.prototype.unstable_scheduleHydration = scheduleHydration;\nexport function hydrateRoot(container, initialChildren, options) {\n  if (!isValidContainer(container)) {\n    throw new Error('hydrateRoot(...): Target container is not a DOM element.');\n  }\n\n  warnIfReactDOMContainerInDEV(container);\n\n  if (__DEV__) {\n    if (initialChildren === undefined) {\n      console.error('Must provide initial children as second argument to hydrateRoot. ' + 'Example usage: hydrateRoot(domContainer, <App />)');\n    }\n  } // For now we reuse the whole bag of options since they contain\n  // the hydration callbacks.\n\n\n  const hydrationCallbacks = options != null ? options : null; // TODO: Delete this option\n\n  const mutableSources = options != null && options.hydratedSources || null;\n  let isStrictMode = false;\n  let concurrentUpdatesByDefaultOverride = false;\n  let identifierPrefix = '';\n  let onRecoverableError = defaultOnRecoverableError;\n  let transitionCallbacks = null;\n\n  if (options !== null && options !== undefined) {\n    if (options.unstable_strictMode === true) {\n      isStrictMode = true;\n    }\n\n    if (allowConcurrentByDefault && options.unstable_concurrentUpdatesByDefault === true) {\n      concurrentUpdatesByDefaultOverride = true;\n    }\n\n    if (options.identifierPrefix !== undefined) {\n      identifierPrefix = options.identifierPrefix;\n    }\n\n    if (options.onRecoverableError !== undefined) {\n      onRecoverableError = options.onRecoverableError;\n    }\n\n    if (options.unstable_transitionCallbacks !== undefined) {\n      transitionCallbacks = options.unstable_transitionCallbacks;\n    }\n  }\n\n  const root = createHydrationContainer(initialChildren, null, container, ConcurrentRoot, hydrationCallbacks, isStrictMode, concurrentUpdatesByDefaultOverride, identifierPrefix, onRecoverableError, transitionCallbacks);\n  markContainerAsRoot(root.current, container);\n\n  if (enableFloat) {\n    // Set the default dispatcher to the client dispatcher\n    Dispatcher.current = ReactDOMClientDispatcher;\n  } // This can't be a comment node since hydration doesn't work on comment nodes anyway.\n\n\n  listenToAllSupportedEvents(container);\n\n  if (mutableSources) {\n    for (let i = 0; i < mutableSources.length; i++) {\n      const mutableSource = mutableSources[i];\n      registerMutableSourceForHydration(root, mutableSource);\n    }\n  } // $FlowFixMe[invalid-constructor] Flow no longer supports calling new on functions\n\n\n  return new ReactDOMHydrationRoot(root);\n}\nexport function isValidContainer(node) {\n  return !!(node && (node.nodeType === ELEMENT_NODE || node.nodeType === DOCUMENT_NODE || node.nodeType === DOCUMENT_FRAGMENT_NODE || !disableCommentsAsDOMContainers && node.nodeType === COMMENT_NODE && node.nodeValue === ' react-mount-point-unstable '));\n} // TODO: Remove this function which also includes comment nodes.\n// We only use it in places that are currently more relaxed.\n\nexport function isValidContainerLegacy(node) {\n  return !!(node && (node.nodeType === ELEMENT_NODE || node.nodeType === DOCUMENT_NODE || node.nodeType === DOCUMENT_FRAGMENT_NODE || node.nodeType === COMMENT_NODE && node.nodeValue === ' react-mount-point-unstable '));\n}\n\nfunction warnIfReactDOMContainerInDEV(container) {\n  if (__DEV__) {\n    if (container.nodeType === ELEMENT_NODE && container.tagName && container.tagName.toUpperCase() === 'BODY') {\n      console.error('createRoot(): Creating roots directly with document.body is ' + 'discouraged, since its children are often manipulated by third-party ' + 'scripts and browser extensions. This may lead to subtle ' + 'reconciliation issues. Try using a container element created ' + 'for your app.');\n    }\n\n    if (isContainerMarkedAsRoot(container)) {\n      if (container._reactRootContainer) {\n        console.error('You are calling ReactDOMClient.createRoot() on a container that was previously ' + 'passed to ReactDOM.render(). This is not supported.');\n      } else {\n        console.error('You are calling ReactDOMClient.createRoot() on a container that ' + 'has already been passed to createRoot() before. Instead, call ' + 'root.render() on the existing root instead if you want to update it.');\n      }\n    }\n  }\n}","map":{"version":3,"sources":["/Users/bytedance/Desktop/sourceCodeReading/react-code/src/react/packages/react-dom/src/client/ReactDOMRoot.js"],"names":["ReactDOMSharedInternals","Dispatcher","ReactDOMClientDispatcher","queueExplicitHydrationTarget","REACT_ELEMENT_TYPE","enableFloat","enableHostSingletons","allowConcurrentByDefault","disableCommentsAsDOMContainers","isContainerMarkedAsRoot","markContainerAsRoot","unmarkContainerAsRoot","listenToAllSupportedEvents","ELEMENT_NODE","COMMENT_NODE","DOCUMENT_NODE","DOCUMENT_FRAGMENT_NODE","createContainer","createHydrationContainer","updateContainer","findHostInstanceWithNoPortals","registerMutableSourceForHydration","flushSync","isAlreadyRendering","ConcurrentRoot","defaultOnRecoverableError","reportError","error","console","ReactDOMRoot","internalRoot","_internalRoot","ReactDOMHydrationRoot","prototype","render","children","root","Error","__DEV__","arguments","isValidContainer","container","containerInfo","nodeType","hostInstance","current","parentNode","unmount","createRoot","options","warnIfReactDOMContainerInDEV","isStrictMode","concurrentUpdatesByDefaultOverride","identifierPrefix","onRecoverableError","transitionCallbacks","undefined","hydrate","warn","$$typeof","unstable_strictMode","unstable_concurrentUpdatesByDefault","unstable_transitionCallbacks","rootContainerElement","scheduleHydration","target","unstable_scheduleHydration","hydrateRoot","initialChildren","hydrationCallbacks","mutableSources","hydratedSources","i","length","mutableSource","node","nodeValue","isValidContainerLegacy","tagName","toUpperCase","_reactRootContainer"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {MutableSource, ReactNodeList} from 'shared/ReactTypes';\nimport type {\n  FiberRoot,\n  TransitionTracingCallbacks,\n} from 'react-reconciler/src/ReactInternalTypes';\n\nimport ReactDOMSharedInternals from '../ReactDOMSharedInternals';\nconst {Dispatcher} = ReactDOMSharedInternals;\nimport {ReactDOMClientDispatcher} from 'react-dom-bindings/src/client/ReactDOMFloatClient';\nimport {queueExplicitHydrationTarget} from 'react-dom-bindings/src/events/ReactDOMEventReplaying';\nimport {REACT_ELEMENT_TYPE} from 'shared/ReactSymbols';\nimport {\n  enableFloat,\n  enableHostSingletons,\n  allowConcurrentByDefault,\n  disableCommentsAsDOMContainers,\n} from 'shared/ReactFeatureFlags';\n\nexport type RootType = {\n  render(children: ReactNodeList): void,\n  unmount(): void,\n  _internalRoot: FiberRoot | null,\n  ...\n};\n\nexport type CreateRootOptions = {\n  unstable_strictMode?: boolean,\n  unstable_concurrentUpdatesByDefault?: boolean,\n  unstable_transitionCallbacks?: TransitionTracingCallbacks,\n  identifierPrefix?: string,\n  onRecoverableError?: (error: mixed) => void,\n  ...\n};\n\nexport type HydrateRootOptions = {\n  // Hydration options\n  hydratedSources?: Array<MutableSource<any>>,\n  onHydrated?: (suspenseNode: Comment) => void,\n  onDeleted?: (suspenseNode: Comment) => void,\n  // Options for all roots\n  unstable_strictMode?: boolean,\n  unstable_concurrentUpdatesByDefault?: boolean,\n  unstable_transitionCallbacks?: TransitionTracingCallbacks,\n  identifierPrefix?: string,\n  onRecoverableError?: (error: mixed) => void,\n  ...\n};\n\nimport {\n  isContainerMarkedAsRoot,\n  markContainerAsRoot,\n  unmarkContainerAsRoot,\n} from 'react-dom-bindings/src/client/ReactDOMComponentTree';\nimport {listenToAllSupportedEvents} from 'react-dom-bindings/src/events/DOMPluginEventSystem';\nimport {\n  ELEMENT_NODE,\n  COMMENT_NODE,\n  DOCUMENT_NODE,\n  DOCUMENT_FRAGMENT_NODE,\n} from 'react-dom-bindings/src/shared/HTMLNodeType';\n\nimport {\n  createContainer,\n  createHydrationContainer,\n  updateContainer,\n  findHostInstanceWithNoPortals,\n  registerMutableSourceForHydration,\n  flushSync,\n  isAlreadyRendering,\n} from 'react-reconciler/src/ReactFiberReconciler';\nimport {ConcurrentRoot} from 'react-reconciler/src/ReactRootTags';\n\n/* global reportError */\nconst defaultOnRecoverableError =\n  typeof reportError === 'function'\n    ? // In modern browsers, reportError will dispatch an error event,\n      // emulating an uncaught JavaScript error.\n      reportError\n    : (error: mixed) => {\n        // In older browsers and test environments, fallback to console.error.\n        // eslint-disable-next-line react-internal/no-production-logging\n        console['error'](error);\n      };\n\nfunction ReactDOMRoot(internalRoot: FiberRoot) {\n  this._internalRoot = internalRoot;\n}\n\n// $FlowFixMe[prop-missing] found when upgrading Flow\nReactDOMHydrationRoot.prototype.render = ReactDOMRoot.prototype.render = function(\n  children: ReactNodeList,\n): void {\n  const root = this._internalRoot;\n  if (root === null) {\n    throw new Error('Cannot update an unmounted root.');\n  }\n\n  if (__DEV__) {\n    if (typeof arguments[1] === 'function') {\n      console.error(\n        'render(...): does not support the second callback argument. ' +\n          'To execute a side effect after rendering, declare it in a component body with useEffect().',\n      );\n    } else if (isValidContainer(arguments[1])) {\n      console.error(\n        'You passed a container to the second argument of root.render(...). ' +\n          \"You don't need to pass it again since you already passed it to create the root.\",\n      );\n    } else if (typeof arguments[1] !== 'undefined') {\n      console.error(\n        'You passed a second argument to root.render(...) but it only accepts ' +\n          'one argument.',\n      );\n    }\n\n    const container = root.containerInfo;\n\n    if (\n      !enableFloat &&\n      !enableHostSingletons &&\n      container.nodeType !== COMMENT_NODE\n    ) {\n      const hostInstance = findHostInstanceWithNoPortals(root.current);\n      if (hostInstance) {\n        if (hostInstance.parentNode !== container) {\n          console.error(\n            'render(...): It looks like the React-rendered content of the ' +\n              'root container was removed without using React. This is not ' +\n              'supported and will cause errors. Instead, call ' +\n              \"root.unmount() to empty a root's container.\",\n          );\n        }\n      }\n    }\n  }\n  updateContainer(children, root, null, null);\n};\n\n// $FlowFixMe[prop-missing] found when upgrading Flow\nReactDOMHydrationRoot.prototype.unmount = ReactDOMRoot.prototype.unmount = function(): void {\n  if (__DEV__) {\n    if (typeof arguments[0] === 'function') {\n      console.error(\n        'unmount(...): does not support a callback argument. ' +\n          'To execute a side effect after rendering, declare it in a component body with useEffect().',\n      );\n    }\n  }\n  const root = this._internalRoot;\n  if (root !== null) {\n    this._internalRoot = null;\n    const container = root.containerInfo;\n    if (__DEV__) {\n      if (isAlreadyRendering()) {\n        console.error(\n          'Attempted to synchronously unmount a root while React was already ' +\n            'rendering. React cannot finish unmounting the root until the ' +\n            'current render has completed, which may lead to a race condition.',\n        );\n      }\n    }\n    flushSync(() => {\n      updateContainer(null, root, null, null);\n    });\n    unmarkContainerAsRoot(container);\n  }\n};\n\nexport function createRoot(\n  container: Element | Document | DocumentFragment,\n  options?: CreateRootOptions,\n): RootType {\n  if (!isValidContainer(container)) {\n    throw new Error('createRoot(...): Target container is not a DOM element.');\n  }\n\n  warnIfReactDOMContainerInDEV(container);\n\n  let isStrictMode = false;\n  let concurrentUpdatesByDefaultOverride = false;\n  let identifierPrefix = '';\n  let onRecoverableError = defaultOnRecoverableError;\n  let transitionCallbacks = null;\n\n  if (options !== null && options !== undefined) {\n    if (__DEV__) {\n      if ((options: any).hydrate) {\n        console.warn(\n          'hydrate through createRoot is deprecated. Use ReactDOMClient.hydrateRoot(container, <App />) instead.',\n        );\n      } else {\n        if (\n          typeof options === 'object' &&\n          options !== null &&\n          (options: any).$$typeof === REACT_ELEMENT_TYPE\n        ) {\n          console.error(\n            'You passed a JSX element to createRoot. You probably meant to ' +\n              'call root.render instead. ' +\n              'Example usage:\\n\\n' +\n              '  let root = createRoot(domContainer);\\n' +\n              '  root.render(<App />);',\n          );\n        }\n      }\n    }\n    if (options.unstable_strictMode === true) {\n      isStrictMode = true;\n    }\n    if (\n      allowConcurrentByDefault &&\n      options.unstable_concurrentUpdatesByDefault === true\n    ) {\n      concurrentUpdatesByDefaultOverride = true;\n    }\n    if (options.identifierPrefix !== undefined) {\n      identifierPrefix = options.identifierPrefix;\n    }\n    if (options.onRecoverableError !== undefined) {\n      onRecoverableError = options.onRecoverableError;\n    }\n    if (options.unstable_transitionCallbacks !== undefined) {\n      transitionCallbacks = options.unstable_transitionCallbacks;\n    }\n  }\n\n  const root = createContainer(\n    container,\n    ConcurrentRoot,\n    null,\n    isStrictMode,\n    concurrentUpdatesByDefaultOverride,\n    identifierPrefix,\n    onRecoverableError,\n    transitionCallbacks,\n  );\n  markContainerAsRoot(root.current, container);\n\n  if (enableFloat) {\n    // Set the default dispatcher to the client dispatcher\n    Dispatcher.current = ReactDOMClientDispatcher;\n  }\n  const rootContainerElement: Document | Element | DocumentFragment =\n    container.nodeType === COMMENT_NODE\n      ? (container.parentNode: any)\n      : container;\n  listenToAllSupportedEvents(rootContainerElement);\n\n  // $FlowFixMe[invalid-constructor] Flow no longer supports calling new on functions\n  return new ReactDOMRoot(root);\n}\n\nfunction ReactDOMHydrationRoot(internalRoot: FiberRoot) {\n  this._internalRoot = internalRoot;\n}\nfunction scheduleHydration(target: Node) {\n  if (target) {\n    queueExplicitHydrationTarget(target);\n  }\n}\n// $FlowFixMe[prop-missing] found when upgrading Flow\nReactDOMHydrationRoot.prototype.unstable_scheduleHydration = scheduleHydration;\n\nexport function hydrateRoot(\n  container: Document | Element,\n  initialChildren: ReactNodeList,\n  options?: HydrateRootOptions,\n): RootType {\n  if (!isValidContainer(container)) {\n    throw new Error('hydrateRoot(...): Target container is not a DOM element.');\n  }\n\n  warnIfReactDOMContainerInDEV(container);\n\n  if (__DEV__) {\n    if (initialChildren === undefined) {\n      console.error(\n        'Must provide initial children as second argument to hydrateRoot. ' +\n          'Example usage: hydrateRoot(domContainer, <App />)',\n      );\n    }\n  }\n\n  // For now we reuse the whole bag of options since they contain\n  // the hydration callbacks.\n  const hydrationCallbacks = options != null ? options : null;\n  // TODO: Delete this option\n  const mutableSources = (options != null && options.hydratedSources) || null;\n\n  let isStrictMode = false;\n  let concurrentUpdatesByDefaultOverride = false;\n  let identifierPrefix = '';\n  let onRecoverableError = defaultOnRecoverableError;\n  let transitionCallbacks = null;\n  if (options !== null && options !== undefined) {\n    if (options.unstable_strictMode === true) {\n      isStrictMode = true;\n    }\n    if (\n      allowConcurrentByDefault &&\n      options.unstable_concurrentUpdatesByDefault === true\n    ) {\n      concurrentUpdatesByDefaultOverride = true;\n    }\n    if (options.identifierPrefix !== undefined) {\n      identifierPrefix = options.identifierPrefix;\n    }\n    if (options.onRecoverableError !== undefined) {\n      onRecoverableError = options.onRecoverableError;\n    }\n    if (options.unstable_transitionCallbacks !== undefined) {\n      transitionCallbacks = options.unstable_transitionCallbacks;\n    }\n  }\n\n  const root = createHydrationContainer(\n    initialChildren,\n    null,\n    container,\n    ConcurrentRoot,\n    hydrationCallbacks,\n    isStrictMode,\n    concurrentUpdatesByDefaultOverride,\n    identifierPrefix,\n    onRecoverableError,\n    transitionCallbacks,\n  );\n  markContainerAsRoot(root.current, container);\n  if (enableFloat) {\n    // Set the default dispatcher to the client dispatcher\n    Dispatcher.current = ReactDOMClientDispatcher;\n  }\n  // This can't be a comment node since hydration doesn't work on comment nodes anyway.\n  listenToAllSupportedEvents(container);\n\n  if (mutableSources) {\n    for (let i = 0; i < mutableSources.length; i++) {\n      const mutableSource = mutableSources[i];\n      registerMutableSourceForHydration(root, mutableSource);\n    }\n  }\n\n  // $FlowFixMe[invalid-constructor] Flow no longer supports calling new on functions\n  return new ReactDOMHydrationRoot(root);\n}\n\nexport function isValidContainer(node: any): boolean {\n  return !!(\n    node &&\n    (node.nodeType === ELEMENT_NODE ||\n      node.nodeType === DOCUMENT_NODE ||\n      node.nodeType === DOCUMENT_FRAGMENT_NODE ||\n      (!disableCommentsAsDOMContainers &&\n        node.nodeType === COMMENT_NODE &&\n        (node: any).nodeValue === ' react-mount-point-unstable '))\n  );\n}\n\n// TODO: Remove this function which also includes comment nodes.\n// We only use it in places that are currently more relaxed.\nexport function isValidContainerLegacy(node: any): boolean {\n  return !!(\n    node &&\n    (node.nodeType === ELEMENT_NODE ||\n      node.nodeType === DOCUMENT_NODE ||\n      node.nodeType === DOCUMENT_FRAGMENT_NODE ||\n      (node.nodeType === COMMENT_NODE &&\n        (node: any).nodeValue === ' react-mount-point-unstable '))\n  );\n}\n\nfunction warnIfReactDOMContainerInDEV(container: any) {\n  if (__DEV__) {\n    if (\n      container.nodeType === ELEMENT_NODE &&\n      ((container: any): Element).tagName &&\n      ((container: any): Element).tagName.toUpperCase() === 'BODY'\n    ) {\n      console.error(\n        'createRoot(): Creating roots directly with document.body is ' +\n          'discouraged, since its children are often manipulated by third-party ' +\n          'scripts and browser extensions. This may lead to subtle ' +\n          'reconciliation issues. Try using a container element created ' +\n          'for your app.',\n      );\n    }\n    if (isContainerMarkedAsRoot(container)) {\n      if (container._reactRootContainer) {\n        console.error(\n          'You are calling ReactDOMClient.createRoot() on a container that was previously ' +\n            'passed to ReactDOM.render(). This is not supported.',\n        );\n      } else {\n        console.error(\n          'You are calling ReactDOMClient.createRoot() on a container that ' +\n            'has already been passed to createRoot() before. Instead, call ' +\n            'root.render() on the existing root instead if you want to update it.',\n        );\n      }\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}