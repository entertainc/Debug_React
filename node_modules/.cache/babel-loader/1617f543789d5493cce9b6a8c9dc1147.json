{"ast":null,"code":"/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport { enableCache } from 'shared/ReactFeatureFlags';\nimport { REACT_CONTEXT_TYPE } from 'shared/ReactSymbols';\nimport { pushProvider, popProvider } from './ReactFiberNewContext';\nimport * as Scheduler from 'scheduler'; // In environments without AbortController (e.g. tests)\n// replace it with a lightweight shim that only has the features we use.\n\nconst AbortControllerLocal = enableCache ? typeof AbortController !== 'undefined' ? AbortController : function AbortControllerShim() {\n  const listeners = [];\n  const signal = this.signal = {\n    aborted: false,\n    addEventListener: (type, listener) => {\n      listeners.push(listener);\n    }\n  };\n\n  this.abort = () => {\n    signal.aborted = true;\n    listeners.forEach(listener => listener());\n  };\n} : null;\n// Intentionally not named imports because Rollup would\n// use dynamic dispatch for CommonJS interop named imports.\nconst {\n  unstable_scheduleCallback: scheduleCallback,\n  unstable_NormalPriority: NormalPriority\n} = Scheduler;\nexport const CacheContext = enableCache ? {\n  $$typeof: REACT_CONTEXT_TYPE,\n  // We don't use Consumer/Provider for Cache components. So we'll cheat.\n  Consumer: null,\n  Provider: null,\n  // We'll initialize these at the root.\n  _currentValue: null,\n  _currentValue2: null,\n  _threadCount: 0,\n  _defaultValue: null,\n  _globalName: null\n} : null;\n\nif (__DEV__ && enableCache) {\n  CacheContext._currentRenderer = null;\n  CacheContext._currentRenderer2 = null;\n} // Creates a new empty Cache instance with a ref-count of 0. The caller is responsible\n// for retaining the cache once it is in use (retainCache), and releasing the cache\n// once it is no longer needed (releaseCache).\n\n\nexport function createCache() {\n  if (!enableCache) {\n    return null;\n  }\n\n  const cache = {\n    controller: new AbortControllerLocal(),\n    data: new Map(),\n    refCount: 0\n  };\n  return cache;\n}\nexport function retainCache(cache) {\n  if (!enableCache) {\n    return;\n  }\n\n  if (__DEV__) {\n    if (cache.controller.signal.aborted) {\n      console.warn('A cache instance was retained after it was already freed. ' + 'This likely indicates a bug in React.');\n    }\n  }\n\n  cache.refCount++;\n} // Cleanup a cache instance, potentially freeing it if there are no more references\n\nexport function releaseCache(cache) {\n  if (!enableCache) {\n    return;\n  }\n\n  cache.refCount--;\n\n  if (__DEV__) {\n    if (cache.refCount < 0) {\n      console.warn('A cache instance was released after it was already freed. ' + 'This likely indicates a bug in React.');\n    }\n  }\n\n  if (cache.refCount === 0) {\n    scheduleCallback(NormalPriority, () => {\n      cache.controller.abort();\n    });\n  }\n}\nexport function pushCacheProvider(workInProgress, cache) {\n  if (!enableCache) {\n    return;\n  }\n\n  pushProvider(workInProgress, CacheContext, cache);\n}\nexport function popCacheProvider(workInProgress, cache) {\n  if (!enableCache) {\n    return;\n  }\n\n  popProvider(CacheContext, workInProgress);\n}","map":{"version":3,"sources":["/Users/bytedance/Desktop/sourceCodeReading/react-code/src/react/packages/react-reconciler/src/ReactFiberCacheComponent.js"],"names":["enableCache","REACT_CONTEXT_TYPE","pushProvider","popProvider","Scheduler","AbortControllerLocal","AbortController","AbortControllerShim","listeners","signal","aborted","addEventListener","type","listener","push","abort","forEach","unstable_scheduleCallback","scheduleCallback","unstable_NormalPriority","NormalPriority","CacheContext","$$typeof","Consumer","Provider","_currentValue","_currentValue2","_threadCount","_defaultValue","_globalName","__DEV__","_currentRenderer","_currentRenderer2","createCache","cache","controller","data","Map","refCount","retainCache","console","warn","releaseCache","pushCacheProvider","workInProgress","popCacheProvider"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {ReactContext} from 'shared/ReactTypes';\nimport type {Fiber} from 'react-reconciler/src/ReactInternalTypes';\n\nimport {enableCache} from 'shared/ReactFeatureFlags';\nimport {REACT_CONTEXT_TYPE} from 'shared/ReactSymbols';\n\nimport {pushProvider, popProvider} from './ReactFiberNewContext';\nimport * as Scheduler from 'scheduler';\n\n// In environments without AbortController (e.g. tests)\n// replace it with a lightweight shim that only has the features we use.\nconst AbortControllerLocal: typeof AbortController = enableCache\n  ? typeof AbortController !== 'undefined'\n    ? AbortController\n    : (function AbortControllerShim() {\n        const listeners = [];\n        const signal = (this.signal = {\n          aborted: false,\n          addEventListener: (type, listener) => {\n            listeners.push(listener);\n          },\n        });\n\n        this.abort = () => {\n          signal.aborted = true;\n          listeners.forEach(listener => listener());\n        };\n      }: AbortController)\n  : (null: any);\n\nexport type Cache = {\n  controller: AbortController,\n  data: Map<() => mixed, mixed>,\n  refCount: number,\n};\n\nexport type CacheComponentState = {\n  +parent: Cache,\n  +cache: Cache,\n};\n\nexport type SpawnedCachePool = {\n  +parent: Cache,\n  +pool: Cache,\n};\n\n// Intentionally not named imports because Rollup would\n// use dynamic dispatch for CommonJS interop named imports.\nconst {\n  unstable_scheduleCallback: scheduleCallback,\n  unstable_NormalPriority: NormalPriority,\n} = Scheduler;\n\nexport const CacheContext: ReactContext<Cache> = enableCache\n  ? {\n      $$typeof: REACT_CONTEXT_TYPE,\n      // We don't use Consumer/Provider for Cache components. So we'll cheat.\n      Consumer: (null: any),\n      Provider: (null: any),\n      // We'll initialize these at the root.\n      _currentValue: (null: any),\n      _currentValue2: (null: any),\n      _threadCount: 0,\n      _defaultValue: (null: any),\n      _globalName: (null: any),\n    }\n  : (null: any);\n\nif (__DEV__ && enableCache) {\n  CacheContext._currentRenderer = null;\n  CacheContext._currentRenderer2 = null;\n}\n\n// Creates a new empty Cache instance with a ref-count of 0. The caller is responsible\n// for retaining the cache once it is in use (retainCache), and releasing the cache\n// once it is no longer needed (releaseCache).\nexport function createCache(): Cache {\n  if (!enableCache) {\n    return (null: any);\n  }\n  const cache: Cache = {\n    controller: new AbortControllerLocal(),\n    data: new Map(),\n    refCount: 0,\n  };\n\n  return cache;\n}\n\nexport function retainCache(cache: Cache) {\n  if (!enableCache) {\n    return;\n  }\n  if (__DEV__) {\n    if (cache.controller.signal.aborted) {\n      console.warn(\n        'A cache instance was retained after it was already freed. ' +\n          'This likely indicates a bug in React.',\n      );\n    }\n  }\n  cache.refCount++;\n}\n\n// Cleanup a cache instance, potentially freeing it if there are no more references\nexport function releaseCache(cache: Cache) {\n  if (!enableCache) {\n    return;\n  }\n  cache.refCount--;\n  if (__DEV__) {\n    if (cache.refCount < 0) {\n      console.warn(\n        'A cache instance was released after it was already freed. ' +\n          'This likely indicates a bug in React.',\n      );\n    }\n  }\n  if (cache.refCount === 0) {\n    scheduleCallback(NormalPriority, () => {\n      cache.controller.abort();\n    });\n  }\n}\n\nexport function pushCacheProvider(workInProgress: Fiber, cache: Cache) {\n  if (!enableCache) {\n    return;\n  }\n  pushProvider(workInProgress, CacheContext, cache);\n}\n\nexport function popCacheProvider(workInProgress: Fiber, cache: Cache) {\n  if (!enableCache) {\n    return;\n  }\n  popProvider(CacheContext, workInProgress);\n}\n"]},"metadata":{},"sourceType":"module"}