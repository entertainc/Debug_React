{"ast":null,"code":"/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n// This module only exists as an ESM wrapper around the external CommonJS\n// Scheduler dependency. Notice that we're intentionally not using named imports\n// because Rollup would use dynamic dispatch for CommonJS interop named imports.\n// When we switch to ESM, we can delete this module.\nimport * as Scheduler from 'scheduler';\nimport { unstable_setDisableYieldValue as setDisableYieldValue, unstable_yieldValue as yieldValue } from 'scheduler/unstable_mock';\nexport const scheduleCallback = Scheduler.unstable_scheduleCallback;\nexport const cancelCallback = Scheduler.unstable_cancelCallback;\nexport const shouldYield = Scheduler.unstable_shouldYield;\nexport const requestPaint = Scheduler.unstable_requestPaint;\nexport const now = Scheduler.unstable_now;\nexport const getCurrentPriorityLevel = Scheduler.unstable_getCurrentPriorityLevel;\nexport const ImmediatePriority = Scheduler.unstable_ImmediatePriority;\nexport const UserBlockingPriority = Scheduler.unstable_UserBlockingPriority;\nexport const NormalPriority = Scheduler.unstable_NormalPriority;\nexport const LowPriority = Scheduler.unstable_LowPriority;\nexport const IdlePriority = Scheduler.unstable_IdlePriority;\n// this doesn't actually exist on the scheduler, but it *does*\n// on scheduler/unstable_mock, which we'll need for internal testing\nexport const unstable_yieldValue = yieldValue;\nexport const unstable_setDisableYieldValue = setDisableYieldValue;","map":{"version":3,"sources":["/Users/bytedance/Desktop/sourceCodeReading/react-code/src/react/packages/react-reconciler/src/Scheduler.js"],"names":["Scheduler","unstable_setDisableYieldValue","setDisableYieldValue","unstable_yieldValue","yieldValue","scheduleCallback","unstable_scheduleCallback","cancelCallback","unstable_cancelCallback","shouldYield","unstable_shouldYield","requestPaint","unstable_requestPaint","now","unstable_now","getCurrentPriorityLevel","unstable_getCurrentPriorityLevel","ImmediatePriority","unstable_ImmediatePriority","UserBlockingPriority","unstable_UserBlockingPriority","NormalPriority","unstable_NormalPriority","LowPriority","unstable_LowPriority","IdlePriority","unstable_IdlePriority"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA,OAAO,KAAKA,SAAZ,MAA2B,WAA3B;AACA,SACEC,6BAA6B,IAAIC,oBADnC,EAEEC,mBAAmB,IAAIC,UAFzB,QAGO,yBAHP;AAKA,OAAO,MAAMC,gBAAgB,GAAGL,SAAS,CAACM,yBAAnC;AACP,OAAO,MAAMC,cAAc,GAAGP,SAAS,CAACQ,uBAAjC;AACP,OAAO,MAAMC,WAAW,GAAGT,SAAS,CAACU,oBAA9B;AACP,OAAO,MAAMC,YAAY,GAAGX,SAAS,CAACY,qBAA/B;AACP,OAAO,MAAMC,GAAG,GAAGb,SAAS,CAACc,YAAtB;AACP,OAAO,MAAMC,uBAAuB,GAClCf,SAAS,CAACgB,gCADL;AAEP,OAAO,MAAMC,iBAAiB,GAAGjB,SAAS,CAACkB,0BAApC;AACP,OAAO,MAAMC,oBAAoB,GAAGnB,SAAS,CAACoB,6BAAvC;AACP,OAAO,MAAMC,cAAc,GAAGrB,SAAS,CAACsB,uBAAjC;AACP,OAAO,MAAMC,WAAW,GAAGvB,SAAS,CAACwB,oBAA9B;AACP,OAAO,MAAMC,YAAY,GAAGzB,SAAS,CAAC0B,qBAA/B;AAGP;AACA;AACA,OAAO,MAAMvB,mBAAmB,GAAGC,UAA5B;AACP,OAAO,MAAMH,6BAA6B,GAAGC,oBAAtC","sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\n// This module only exists as an ESM wrapper around the external CommonJS\n// Scheduler dependency. Notice that we're intentionally not using named imports\n// because Rollup would use dynamic dispatch for CommonJS interop named imports.\n// When we switch to ESM, we can delete this module.\nimport * as Scheduler from 'scheduler';\nimport {\n  unstable_setDisableYieldValue as setDisableYieldValue,\n  unstable_yieldValue as yieldValue\n} from 'scheduler/unstable_mock'\n\nexport const scheduleCallback = Scheduler.unstable_scheduleCallback;\nexport const cancelCallback = Scheduler.unstable_cancelCallback;\nexport const shouldYield = Scheduler.unstable_shouldYield;\nexport const requestPaint = Scheduler.unstable_requestPaint;\nexport const now = Scheduler.unstable_now;\nexport const getCurrentPriorityLevel =\n  Scheduler.unstable_getCurrentPriorityLevel;\nexport const ImmediatePriority = Scheduler.unstable_ImmediatePriority;\nexport const UserBlockingPriority = Scheduler.unstable_UserBlockingPriority;\nexport const NormalPriority = Scheduler.unstable_NormalPriority;\nexport const LowPriority = Scheduler.unstable_LowPriority;\nexport const IdlePriority = Scheduler.unstable_IdlePriority;\nexport type SchedulerCallback = (isSync: boolean) => SchedulerCallback | null;\n\n// this doesn't actually exist on the scheduler, but it *does*\n// on scheduler/unstable_mock, which we'll need for internal testing\nexport const unstable_yieldValue = yieldValue;\nexport const unstable_setDisableYieldValue = setDisableYieldValue;\n"]},"metadata":{},"sourceType":"module"}