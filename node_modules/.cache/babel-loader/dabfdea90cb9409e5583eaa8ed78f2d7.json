{"ast":null,"code":"/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport { getStackByFiberInDevAndProd } from './ReactFiberComponentStack';\nexport function createCapturedValueAtFiber(value, source) {\n  // If the value is an error, call this function immediately after it is thrown\n  // so the stack is accurate.\n  return {\n    value,\n    source,\n    stack: getStackByFiberInDevAndProd(source),\n    digest: null\n  };\n}\nexport function createCapturedValue(value, digest, stack) {\n  return {\n    value,\n    source: null,\n    stack: stack != null ? stack : null,\n    digest: digest != null ? digest : null\n  };\n}","map":{"version":3,"sources":["/Users/bytedance/Desktop/sourceCodeReading/react-code/src/react/packages/react-reconciler/src/ReactCapturedValue.js"],"names":["getStackByFiberInDevAndProd","createCapturedValueAtFiber","value","source","stack","digest","createCapturedValue"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA,SAAQA,2BAAR,QAA0C,4BAA1C;AASA,OAAO,SAASC,0BAAT,CACLC,KADK,EAELC,MAFK,EAGa;AAClB;AACA;AACA,SAAO;AACLD,IAAAA,KADK;AAELC,IAAAA,MAFK;AAGLC,IAAAA,KAAK,EAAEJ,2BAA2B,CAACG,MAAD,CAH7B;AAILE,IAAAA,MAAM,EAAE;AAJH,GAAP;AAMD;AAED,OAAO,SAASC,mBAAT,CACLJ,KADK,EAELG,MAFK,EAGLD,KAHK,EAIa;AAClB,SAAO;AACLF,IAAAA,KADK;AAELC,IAAAA,MAAM,EAAE,IAFH;AAGLC,IAAAA,KAAK,EAAEA,KAAK,IAAI,IAAT,GAAgBA,KAAhB,GAAwB,IAH1B;AAILC,IAAAA,MAAM,EAAEA,MAAM,IAAI,IAAV,GAAiBA,MAAjB,GAA0B;AAJ7B,GAAP;AAMD","sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactInternalTypes';\n\nimport {getStackByFiberInDevAndProd} from './ReactFiberComponentStack';\n\nexport type CapturedValue<T> = {\n  value: T,\n  source: Fiber | null,\n  stack: string | null,\n  digest: string | null,\n};\n\nexport function createCapturedValueAtFiber<T>(\n  value: T,\n  source: Fiber,\n): CapturedValue<T> {\n  // If the value is an error, call this function immediately after it is thrown\n  // so the stack is accurate.\n  return {\n    value,\n    source,\n    stack: getStackByFiberInDevAndProd(source),\n    digest: null,\n  };\n}\n\nexport function createCapturedValue<T>(\n  value: T,\n  digest: ?string,\n  stack: ?string,\n): CapturedValue<T> {\n  return {\n    value,\n    source: null,\n    stack: stack != null ? stack : null,\n    digest: digest != null ? digest : null,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}