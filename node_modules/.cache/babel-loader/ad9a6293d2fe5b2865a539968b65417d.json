{"ast":null,"code":"/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport assign from 'shared/assign';\nexport function resolveDefaultProps(Component, baseProps) {\n  if (Component && Component.defaultProps) {\n    // Resolve default props. Taken from ReactElement\n    const props = assign({}, baseProps);\n    const defaultProps = Component.defaultProps;\n\n    for (const propName in defaultProps) {\n      if (props[propName] === undefined) {\n        props[propName] = defaultProps[propName];\n      }\n    }\n\n    return props;\n  }\n\n  return baseProps;\n}","map":{"version":3,"sources":["/Users/bytedance/Desktop/sourceCodeReading/react-code/src/react/packages/react-reconciler/src/ReactFiberLazyComponent.js"],"names":["assign","resolveDefaultProps","Component","baseProps","defaultProps","props","propName","undefined"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,MAAP,MAAmB,eAAnB;AAEA,OAAO,SAASC,mBAAT,CAA6BC,SAA7B,EAA6CC,SAA7C,EAAwE;AAC7E,MAAID,SAAS,IAAIA,SAAS,CAACE,YAA3B,EAAyC;AACvC;AACA,UAAMC,KAAK,GAAGL,MAAM,CAAC,EAAD,EAAKG,SAAL,CAApB;AACA,UAAMC,YAAY,GAAGF,SAAS,CAACE,YAA/B;;AACA,SAAK,MAAME,QAAX,IAAuBF,YAAvB,EAAqC;AACnC,UAAIC,KAAK,CAACC,QAAD,CAAL,KAAoBC,SAAxB,EAAmC;AACjCF,QAAAA,KAAK,CAACC,QAAD,CAAL,GAAkBF,YAAY,CAACE,QAAD,CAA9B;AACD;AACF;;AACD,WAAOD,KAAP;AACD;;AACD,SAAOF,SAAP;AACD","sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport assign from 'shared/assign';\n\nexport function resolveDefaultProps(Component: any, baseProps: Object): Object {\n  if (Component && Component.defaultProps) {\n    // Resolve default props. Taken from ReactElement\n    const props = assign({}, baseProps);\n    const defaultProps = Component.defaultProps;\n    for (const propName in defaultProps) {\n      if (props[propName] === undefined) {\n        props[propName] = defaultProps[propName];\n      }\n    }\n    return props;\n  }\n  return baseProps;\n}\n"]},"metadata":{},"sourceType":"module"}