{"ast":null,"code":"/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nlet validateDOMNesting = () => {};\n\nlet updatedAncestorInfoDev = () => {};\n\nif (__DEV__) {\n  // This validation code was written based on the HTML5 parsing spec:\n  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope\n  //\n  // Note: this does not catch all invalid nesting, nor does it try to (as it's\n  // not clear what practical benefit doing so provides); instead, we warn only\n  // for cases where the parser will give a parse tree differing from what React\n  // intended. For example, <b><div></div></b> is invalid but we don't warn\n  // because it still parses correctly; we do warn for other cases like nested\n  // <p> tags where the beginning of the second element implicitly closes the\n  // first, causing a confusing mess.\n  // https://html.spec.whatwg.org/multipage/syntax.html#special\n  const specialTags = ['address', 'applet', 'area', 'article', 'aside', 'base', 'basefont', 'bgsound', 'blockquote', 'body', 'br', 'button', 'caption', 'center', 'col', 'colgroup', 'dd', 'details', 'dir', 'div', 'dl', 'dt', 'embed', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'frame', 'frameset', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'iframe', 'img', 'input', 'isindex', 'li', 'link', 'listing', 'main', 'marquee', 'menu', 'menuitem', 'meta', 'nav', 'noembed', 'noframes', 'noscript', 'object', 'ol', 'p', 'param', 'plaintext', 'pre', 'script', 'section', 'select', 'source', 'style', 'summary', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'title', 'tr', 'track', 'ul', 'wbr', 'xmp']; // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope\n\n  const inScopeTags = ['applet', 'caption', 'html', 'table', 'td', 'th', 'marquee', 'object', 'template', // https://html.spec.whatwg.org/multipage/syntax.html#html-integration-point\n  // TODO: Distinguish by namespace here -- for <title>, including it here\n  // errs on the side of fewer warnings\n  'foreignObject', 'desc', 'title']; // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-button-scope\n\n  const buttonScopeTags = inScopeTags.concat(['button']); // https://html.spec.whatwg.org/multipage/syntax.html#generate-implied-end-tags\n\n  const impliedEndTags = ['dd', 'dt', 'li', 'option', 'optgroup', 'p', 'rp', 'rt'];\n  const emptyAncestorInfoDev = {\n    current: null,\n    formTag: null,\n    aTagInScope: null,\n    buttonTagInScope: null,\n    nobrTagInScope: null,\n    pTagInButtonScope: null,\n    listItemTagAutoclosing: null,\n    dlItemTagAutoclosing: null,\n    containerTagInScope: null\n  };\n\n  updatedAncestorInfoDev = function (oldInfo, tag) {\n    const ancestorInfo = { ...(oldInfo || emptyAncestorInfoDev)\n    };\n    const info = {\n      tag\n    };\n\n    if (inScopeTags.indexOf(tag) !== -1) {\n      ancestorInfo.aTagInScope = null;\n      ancestorInfo.buttonTagInScope = null;\n      ancestorInfo.nobrTagInScope = null;\n    }\n\n    if (buttonScopeTags.indexOf(tag) !== -1) {\n      ancestorInfo.pTagInButtonScope = null;\n    } // See rules for 'li', 'dd', 'dt' start tags in\n    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody\n\n\n    if (specialTags.indexOf(tag) !== -1 && tag !== 'address' && tag !== 'div' && tag !== 'p') {\n      ancestorInfo.listItemTagAutoclosing = null;\n      ancestorInfo.dlItemTagAutoclosing = null;\n    }\n\n    ancestorInfo.current = info;\n\n    if (tag === 'form') {\n      ancestorInfo.formTag = info;\n    }\n\n    if (tag === 'a') {\n      ancestorInfo.aTagInScope = info;\n    }\n\n    if (tag === 'button') {\n      ancestorInfo.buttonTagInScope = info;\n    }\n\n    if (tag === 'nobr') {\n      ancestorInfo.nobrTagInScope = info;\n    }\n\n    if (tag === 'p') {\n      ancestorInfo.pTagInButtonScope = info;\n    }\n\n    if (tag === 'li') {\n      ancestorInfo.listItemTagAutoclosing = info;\n    }\n\n    if (tag === 'dd' || tag === 'dt') {\n      ancestorInfo.dlItemTagAutoclosing = info;\n    }\n\n    if (tag === '#document' || tag === 'html') {\n      ancestorInfo.containerTagInScope = null;\n    } else if (!ancestorInfo.containerTagInScope) {\n      ancestorInfo.containerTagInScope = info;\n    }\n\n    return ancestorInfo;\n  };\n  /**\n   * Returns whether\n   */\n\n\n  const isTagValidWithParent = function (tag, parentTag) {\n    // First, let's check if we're in an unusual parsing mode...\n    switch (parentTag) {\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inselect\n      case 'select':\n        return tag === 'option' || tag === 'optgroup' || tag === '#text';\n\n      case 'optgroup':\n        return tag === 'option' || tag === '#text';\n      // Strictly speaking, seeing an <option> doesn't mean we're in a <select>\n      // but\n\n      case 'option':\n        return tag === '#text';\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intd\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incaption\n      // No special behavior since these rules fall back to \"in body\" mode for\n      // all except special table nodes which cause bad parsing behavior anyway.\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intr\n\n      case 'tr':\n        return tag === 'th' || tag === 'td' || tag === 'style' || tag === 'script' || tag === 'template';\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intbody\n\n      case 'tbody':\n      case 'thead':\n      case 'tfoot':\n        return tag === 'tr' || tag === 'style' || tag === 'script' || tag === 'template';\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incolgroup\n\n      case 'colgroup':\n        return tag === 'col' || tag === 'template';\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intable\n\n      case 'table':\n        return tag === 'caption' || tag === 'colgroup' || tag === 'tbody' || tag === 'tfoot' || tag === 'thead' || tag === 'style' || tag === 'script' || tag === 'template';\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inhead\n\n      case 'head':\n        return tag === 'base' || tag === 'basefont' || tag === 'bgsound' || tag === 'link' || tag === 'meta' || tag === 'title' || tag === 'noscript' || tag === 'noframes' || tag === 'style' || tag === 'script' || tag === 'template';\n      // https://html.spec.whatwg.org/multipage/semantics.html#the-html-element\n\n      case 'html':\n        return tag === 'head' || tag === 'body' || tag === 'frameset';\n\n      case 'frameset':\n        return tag === 'frame';\n\n      case '#document':\n        return tag === 'html';\n    } // Probably in the \"in body\" parsing mode, so we outlaw only tag combos\n    // where the parsing rules cause implicit opens or closes to be added.\n    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody\n\n\n    switch (tag) {\n      case 'h1':\n      case 'h2':\n      case 'h3':\n      case 'h4':\n      case 'h5':\n      case 'h6':\n        return parentTag !== 'h1' && parentTag !== 'h2' && parentTag !== 'h3' && parentTag !== 'h4' && parentTag !== 'h5' && parentTag !== 'h6';\n\n      case 'rp':\n      case 'rt':\n        return impliedEndTags.indexOf(parentTag) === -1;\n\n      case 'body':\n      case 'caption':\n      case 'col':\n      case 'colgroup':\n      case 'frameset':\n      case 'frame':\n      case 'head':\n      case 'html':\n      case 'tbody':\n      case 'td':\n      case 'tfoot':\n      case 'th':\n      case 'thead':\n      case 'tr':\n        // These tags are only valid with a few parents that have special child\n        // parsing rules -- if we're down here, then none of those matched and\n        // so we allow it only if we don't know what the parent is, as all other\n        // cases are invalid.\n        return parentTag == null;\n    }\n\n    return true;\n  };\n  /**\n   * Returns whether\n   */\n\n\n  const findInvalidAncestorForTag = function (tag, ancestorInfo) {\n    switch (tag) {\n      case 'address':\n      case 'article':\n      case 'aside':\n      case 'blockquote':\n      case 'center':\n      case 'details':\n      case 'dialog':\n      case 'dir':\n      case 'div':\n      case 'dl':\n      case 'fieldset':\n      case 'figcaption':\n      case 'figure':\n      case 'footer':\n      case 'header':\n      case 'hgroup':\n      case 'main':\n      case 'menu':\n      case 'nav':\n      case 'ol':\n      case 'p':\n      case 'section':\n      case 'summary':\n      case 'ul':\n      case 'pre':\n      case 'listing':\n      case 'table':\n      case 'hr':\n      case 'xmp':\n      case 'h1':\n      case 'h2':\n      case 'h3':\n      case 'h4':\n      case 'h5':\n      case 'h6':\n        return ancestorInfo.pTagInButtonScope;\n\n      case 'form':\n        return ancestorInfo.formTag || ancestorInfo.pTagInButtonScope;\n\n      case 'li':\n        return ancestorInfo.listItemTagAutoclosing;\n\n      case 'dd':\n      case 'dt':\n        return ancestorInfo.dlItemTagAutoclosing;\n\n      case 'button':\n        return ancestorInfo.buttonTagInScope;\n\n      case 'a':\n        // Spec says something about storing a list of markers, but it sounds\n        // equivalent to this check.\n        return ancestorInfo.aTagInScope;\n\n      case 'nobr':\n        return ancestorInfo.nobrTagInScope;\n    }\n\n    return null;\n  };\n\n  const didWarn = {};\n\n  validateDOMNesting = function (childTag, childText, ancestorInfo) {\n    ancestorInfo = ancestorInfo || emptyAncestorInfoDev;\n    const parentInfo = ancestorInfo.current;\n    const parentTag = parentInfo && parentInfo.tag;\n\n    if (childText != null) {\n      if (childTag != null) {\n        console.error('validateDOMNesting: when childText is passed, childTag should be null');\n      }\n\n      childTag = '#text';\n    } else if (childTag == null) {\n      console.error('validateDOMNesting: when childText or childTag must be provided');\n      return;\n    }\n\n    const invalidParent = isTagValidWithParent(childTag, parentTag) ? null : parentInfo;\n    const invalidAncestor = invalidParent ? null : findInvalidAncestorForTag(childTag, ancestorInfo);\n    const invalidParentOrAncestor = invalidParent || invalidAncestor;\n\n    if (!invalidParentOrAncestor) {\n      return;\n    }\n\n    const ancestorTag = invalidParentOrAncestor.tag;\n    const warnKey = // eslint-disable-next-line react-internal/safe-string-coercion\n    String(!!invalidParent) + '|' + childTag + '|' + ancestorTag;\n\n    if (didWarn[warnKey]) {\n      return;\n    }\n\n    didWarn[warnKey] = true;\n    let tagDisplayName = childTag;\n    let whitespaceInfo = '';\n\n    if (childTag === '#text') {\n      if (childText != null && /\\S/.test(childText)) {\n        tagDisplayName = 'Text nodes';\n      } else {\n        tagDisplayName = 'Whitespace text nodes';\n        whitespaceInfo = \" Make sure you don't have any extra whitespace between tags on \" + 'each line of your source code.';\n      }\n    } else {\n      tagDisplayName = '<' + childTag + '>';\n    }\n\n    if (invalidParent) {\n      let info = '';\n\n      if (ancestorTag === 'table' && childTag === 'tr') {\n        info += ' Add a <tbody>, <thead> or <tfoot> to your code to match the DOM tree generated by ' + 'the browser.';\n      }\n\n      console.error('validateDOMNesting(...): %s cannot appear as a child of <%s>.%s%s', tagDisplayName, ancestorTag, whitespaceInfo, info);\n    } else {\n      console.error('validateDOMNesting(...): %s cannot appear as a descendant of ' + '<%s>.', tagDisplayName, ancestorTag);\n    }\n  };\n}\n\nexport { updatedAncestorInfoDev, validateDOMNesting };","map":{"version":3,"sources":["/Users/bytedance/Desktop/sourceCodeReading/react-code/src/react/packages/react-dom-bindings/src/client/validateDOMNesting.js"],"names":["validateDOMNesting","updatedAncestorInfoDev","__DEV__","specialTags","inScopeTags","buttonScopeTags","concat","impliedEndTags","emptyAncestorInfoDev","current","formTag","aTagInScope","buttonTagInScope","nobrTagInScope","pTagInButtonScope","listItemTagAutoclosing","dlItemTagAutoclosing","containerTagInScope","oldInfo","tag","ancestorInfo","info","indexOf","isTagValidWithParent","parentTag","findInvalidAncestorForTag","didWarn","childTag","childText","parentInfo","console","error","invalidParent","invalidAncestor","invalidParentOrAncestor","ancestorTag","warnKey","String","tagDisplayName","whitespaceInfo","test"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\ntype ValidateDOMNesting = (?string, ?string, AncestorInfoDev) => void;\nlet validateDOMNesting: ValidateDOMNesting = (() => {}: any);\n\ntype UpdatedAncestorInfoDev = (?AncestorInfoDev, string) => AncestorInfoDev;\nlet updatedAncestorInfoDev: UpdatedAncestorInfoDev = (() => {}: any);\n\ntype Info = {tag: string};\nexport type AncestorInfoDev = {\n  current: ?Info,\n\n  formTag: ?Info,\n  aTagInScope: ?Info,\n  buttonTagInScope: ?Info,\n  nobrTagInScope: ?Info,\n  pTagInButtonScope: ?Info,\n\n  listItemTagAutoclosing: ?Info,\n  dlItemTagAutoclosing: ?Info,\n\n  // <head> or <body>\n  containerTagInScope: ?Info,\n};\n\nif (__DEV__) {\n  // This validation code was written based on the HTML5 parsing spec:\n  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope\n  //\n  // Note: this does not catch all invalid nesting, nor does it try to (as it's\n  // not clear what practical benefit doing so provides); instead, we warn only\n  // for cases where the parser will give a parse tree differing from what React\n  // intended. For example, <b><div></div></b> is invalid but we don't warn\n  // because it still parses correctly; we do warn for other cases like nested\n  // <p> tags where the beginning of the second element implicitly closes the\n  // first, causing a confusing mess.\n\n  // https://html.spec.whatwg.org/multipage/syntax.html#special\n  const specialTags = [\n    'address',\n    'applet',\n    'area',\n    'article',\n    'aside',\n    'base',\n    'basefont',\n    'bgsound',\n    'blockquote',\n    'body',\n    'br',\n    'button',\n    'caption',\n    'center',\n    'col',\n    'colgroup',\n    'dd',\n    'details',\n    'dir',\n    'div',\n    'dl',\n    'dt',\n    'embed',\n    'fieldset',\n    'figcaption',\n    'figure',\n    'footer',\n    'form',\n    'frame',\n    'frameset',\n    'h1',\n    'h2',\n    'h3',\n    'h4',\n    'h5',\n    'h6',\n    'head',\n    'header',\n    'hgroup',\n    'hr',\n    'html',\n    'iframe',\n    'img',\n    'input',\n    'isindex',\n    'li',\n    'link',\n    'listing',\n    'main',\n    'marquee',\n    'menu',\n    'menuitem',\n    'meta',\n    'nav',\n    'noembed',\n    'noframes',\n    'noscript',\n    'object',\n    'ol',\n    'p',\n    'param',\n    'plaintext',\n    'pre',\n    'script',\n    'section',\n    'select',\n    'source',\n    'style',\n    'summary',\n    'table',\n    'tbody',\n    'td',\n    'template',\n    'textarea',\n    'tfoot',\n    'th',\n    'thead',\n    'title',\n    'tr',\n    'track',\n    'ul',\n    'wbr',\n    'xmp',\n  ];\n\n  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope\n  const inScopeTags = [\n    'applet',\n    'caption',\n    'html',\n    'table',\n    'td',\n    'th',\n    'marquee',\n    'object',\n    'template',\n\n    // https://html.spec.whatwg.org/multipage/syntax.html#html-integration-point\n    // TODO: Distinguish by namespace here -- for <title>, including it here\n    // errs on the side of fewer warnings\n    'foreignObject',\n    'desc',\n    'title',\n  ];\n\n  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-button-scope\n  const buttonScopeTags = inScopeTags.concat(['button']);\n\n  // https://html.spec.whatwg.org/multipage/syntax.html#generate-implied-end-tags\n  const impliedEndTags = [\n    'dd',\n    'dt',\n    'li',\n    'option',\n    'optgroup',\n    'p',\n    'rp',\n    'rt',\n  ];\n\n  const emptyAncestorInfoDev: AncestorInfoDev = {\n    current: null,\n\n    formTag: null,\n    aTagInScope: null,\n    buttonTagInScope: null,\n    nobrTagInScope: null,\n    pTagInButtonScope: null,\n\n    listItemTagAutoclosing: null,\n    dlItemTagAutoclosing: null,\n\n    containerTagInScope: null,\n  };\n\n  updatedAncestorInfoDev = function(oldInfo: ?AncestorInfoDev, tag: string) {\n    const ancestorInfo = {...(oldInfo || emptyAncestorInfoDev)};\n    const info = {tag};\n\n    if (inScopeTags.indexOf(tag) !== -1) {\n      ancestorInfo.aTagInScope = null;\n      ancestorInfo.buttonTagInScope = null;\n      ancestorInfo.nobrTagInScope = null;\n    }\n    if (buttonScopeTags.indexOf(tag) !== -1) {\n      ancestorInfo.pTagInButtonScope = null;\n    }\n\n    // See rules for 'li', 'dd', 'dt' start tags in\n    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody\n    if (\n      specialTags.indexOf(tag) !== -1 &&\n      tag !== 'address' &&\n      tag !== 'div' &&\n      tag !== 'p'\n    ) {\n      ancestorInfo.listItemTagAutoclosing = null;\n      ancestorInfo.dlItemTagAutoclosing = null;\n    }\n\n    ancestorInfo.current = info;\n\n    if (tag === 'form') {\n      ancestorInfo.formTag = info;\n    }\n    if (tag === 'a') {\n      ancestorInfo.aTagInScope = info;\n    }\n    if (tag === 'button') {\n      ancestorInfo.buttonTagInScope = info;\n    }\n    if (tag === 'nobr') {\n      ancestorInfo.nobrTagInScope = info;\n    }\n    if (tag === 'p') {\n      ancestorInfo.pTagInButtonScope = info;\n    }\n    if (tag === 'li') {\n      ancestorInfo.listItemTagAutoclosing = info;\n    }\n    if (tag === 'dd' || tag === 'dt') {\n      ancestorInfo.dlItemTagAutoclosing = info;\n    }\n    if (tag === '#document' || tag === 'html') {\n      ancestorInfo.containerTagInScope = null;\n    } else if (!ancestorInfo.containerTagInScope) {\n      ancestorInfo.containerTagInScope = info;\n    }\n\n    return ancestorInfo;\n  };\n\n  /**\n   * Returns whether\n   */\n  const isTagValidWithParent = function(\n    tag: string,\n    parentTag: ?string,\n  ): boolean {\n    // First, let's check if we're in an unusual parsing mode...\n    switch (parentTag) {\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inselect\n      case 'select':\n        return tag === 'option' || tag === 'optgroup' || tag === '#text';\n      case 'optgroup':\n        return tag === 'option' || tag === '#text';\n      // Strictly speaking, seeing an <option> doesn't mean we're in a <select>\n      // but\n      case 'option':\n        return tag === '#text';\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intd\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incaption\n      // No special behavior since these rules fall back to \"in body\" mode for\n      // all except special table nodes which cause bad parsing behavior anyway.\n\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intr\n      case 'tr':\n        return (\n          tag === 'th' ||\n          tag === 'td' ||\n          tag === 'style' ||\n          tag === 'script' ||\n          tag === 'template'\n        );\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intbody\n      case 'tbody':\n      case 'thead':\n      case 'tfoot':\n        return (\n          tag === 'tr' ||\n          tag === 'style' ||\n          tag === 'script' ||\n          tag === 'template'\n        );\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incolgroup\n      case 'colgroup':\n        return tag === 'col' || tag === 'template';\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intable\n      case 'table':\n        return (\n          tag === 'caption' ||\n          tag === 'colgroup' ||\n          tag === 'tbody' ||\n          tag === 'tfoot' ||\n          tag === 'thead' ||\n          tag === 'style' ||\n          tag === 'script' ||\n          tag === 'template'\n        );\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inhead\n      case 'head':\n        return (\n          tag === 'base' ||\n          tag === 'basefont' ||\n          tag === 'bgsound' ||\n          tag === 'link' ||\n          tag === 'meta' ||\n          tag === 'title' ||\n          tag === 'noscript' ||\n          tag === 'noframes' ||\n          tag === 'style' ||\n          tag === 'script' ||\n          tag === 'template'\n        );\n      // https://html.spec.whatwg.org/multipage/semantics.html#the-html-element\n      case 'html':\n        return tag === 'head' || tag === 'body' || tag === 'frameset';\n      case 'frameset':\n        return tag === 'frame';\n      case '#document':\n        return tag === 'html';\n    }\n\n    // Probably in the \"in body\" parsing mode, so we outlaw only tag combos\n    // where the parsing rules cause implicit opens or closes to be added.\n    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody\n    switch (tag) {\n      case 'h1':\n      case 'h2':\n      case 'h3':\n      case 'h4':\n      case 'h5':\n      case 'h6':\n        return (\n          parentTag !== 'h1' &&\n          parentTag !== 'h2' &&\n          parentTag !== 'h3' &&\n          parentTag !== 'h4' &&\n          parentTag !== 'h5' &&\n          parentTag !== 'h6'\n        );\n\n      case 'rp':\n      case 'rt':\n        return impliedEndTags.indexOf(parentTag) === -1;\n\n      case 'body':\n      case 'caption':\n      case 'col':\n      case 'colgroup':\n      case 'frameset':\n      case 'frame':\n      case 'head':\n      case 'html':\n      case 'tbody':\n      case 'td':\n      case 'tfoot':\n      case 'th':\n      case 'thead':\n      case 'tr':\n        // These tags are only valid with a few parents that have special child\n        // parsing rules -- if we're down here, then none of those matched and\n        // so we allow it only if we don't know what the parent is, as all other\n        // cases are invalid.\n        return parentTag == null;\n    }\n\n    return true;\n  };\n\n  /**\n   * Returns whether\n   */\n  const findInvalidAncestorForTag = function(\n    tag: string,\n    ancestorInfo: AncestorInfoDev,\n  ): ?Info {\n    switch (tag) {\n      case 'address':\n      case 'article':\n      case 'aside':\n      case 'blockquote':\n      case 'center':\n      case 'details':\n      case 'dialog':\n      case 'dir':\n      case 'div':\n      case 'dl':\n      case 'fieldset':\n      case 'figcaption':\n      case 'figure':\n      case 'footer':\n      case 'header':\n      case 'hgroup':\n      case 'main':\n      case 'menu':\n      case 'nav':\n      case 'ol':\n      case 'p':\n      case 'section':\n      case 'summary':\n      case 'ul':\n      case 'pre':\n      case 'listing':\n      case 'table':\n      case 'hr':\n      case 'xmp':\n      case 'h1':\n      case 'h2':\n      case 'h3':\n      case 'h4':\n      case 'h5':\n      case 'h6':\n        return ancestorInfo.pTagInButtonScope;\n\n      case 'form':\n        return ancestorInfo.formTag || ancestorInfo.pTagInButtonScope;\n\n      case 'li':\n        return ancestorInfo.listItemTagAutoclosing;\n\n      case 'dd':\n      case 'dt':\n        return ancestorInfo.dlItemTagAutoclosing;\n\n      case 'button':\n        return ancestorInfo.buttonTagInScope;\n\n      case 'a':\n        // Spec says something about storing a list of markers, but it sounds\n        // equivalent to this check.\n        return ancestorInfo.aTagInScope;\n\n      case 'nobr':\n        return ancestorInfo.nobrTagInScope;\n    }\n\n    return null;\n  };\n\n  const didWarn = {};\n\n  validateDOMNesting = function(\n    childTag: ?string,\n    childText: ?string,\n    ancestorInfo: AncestorInfoDev,\n  ) {\n    ancestorInfo = ancestorInfo || emptyAncestorInfoDev;\n    const parentInfo = ancestorInfo.current;\n    const parentTag = parentInfo && parentInfo.tag;\n\n    if (childText != null) {\n      if (childTag != null) {\n        console.error(\n          'validateDOMNesting: when childText is passed, childTag should be null',\n        );\n      }\n      childTag = '#text';\n    } else if (childTag == null) {\n      console.error(\n        'validateDOMNesting: when childText or childTag must be provided',\n      );\n      return;\n    }\n\n    const invalidParent = isTagValidWithParent(childTag, parentTag)\n      ? null\n      : parentInfo;\n    const invalidAncestor = invalidParent\n      ? null\n      : findInvalidAncestorForTag(childTag, ancestorInfo);\n    const invalidParentOrAncestor = invalidParent || invalidAncestor;\n    if (!invalidParentOrAncestor) {\n      return;\n    }\n\n    const ancestorTag = invalidParentOrAncestor.tag;\n\n    const warnKey =\n      // eslint-disable-next-line react-internal/safe-string-coercion\n      String(!!invalidParent) + '|' + childTag + '|' + ancestorTag;\n    if (didWarn[warnKey]) {\n      return;\n    }\n    didWarn[warnKey] = true;\n\n    let tagDisplayName = childTag;\n    let whitespaceInfo = '';\n    if (childTag === '#text') {\n      if (childText != null && /\\S/.test(childText)) {\n        tagDisplayName = 'Text nodes';\n      } else {\n        tagDisplayName = 'Whitespace text nodes';\n        whitespaceInfo =\n          \" Make sure you don't have any extra whitespace between tags on \" +\n          'each line of your source code.';\n      }\n    } else {\n      tagDisplayName = '<' + childTag + '>';\n    }\n\n    if (invalidParent) {\n      let info = '';\n      if (ancestorTag === 'table' && childTag === 'tr') {\n        info +=\n          ' Add a <tbody>, <thead> or <tfoot> to your code to match the DOM tree generated by ' +\n          'the browser.';\n      }\n      console.error(\n        'validateDOMNesting(...): %s cannot appear as a child of <%s>.%s%s',\n        tagDisplayName,\n        ancestorTag,\n        whitespaceInfo,\n        info,\n      );\n    } else {\n      console.error(\n        'validateDOMNesting(...): %s cannot appear as a descendant of ' +\n          '<%s>.',\n        tagDisplayName,\n        ancestorTag,\n      );\n    }\n  };\n}\n\nexport {updatedAncestorInfoDev, validateDOMNesting};\n"]},"metadata":{},"sourceType":"module"}